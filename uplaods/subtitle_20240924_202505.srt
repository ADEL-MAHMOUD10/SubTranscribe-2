1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:07,766
based on this research, now AI can learn to use digital tools

3
00:00:07,798 --> 00:00:11,182
like to this in few or zero shot settings.

4
00:00:11,286 --> 00:00:14,398
When it comes to natural language processing tasks, you can do

5
00:00:14,414 --> 00:00:18,262
it with AssemblyAI and it's going to be just a couple of lines of code

6
00:00:18,326 --> 00:00:22,662
very quick. Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,766 --> 00:00:26,964
you're going to get time subtitles that you can upload to YouTube

8
00:00:27,102 --> 00:00:29,848
or use on your local computer however you like.

9
00:00:29,984 --> 00:00:32,512
The first thing that you want to do is to make sure that you have

10
00:00:32,536 --> 00:00:36,032
the AssemblyAI SDK installed. And for that all you

11
00:00:36,056 --> 00:00:39,496
have to do is go to your terminal and write down pip install

12
00:00:39,568 --> 00:00:42,872
AssemblyAI and that will install the python SDK of

13
00:00:42,896 --> 00:00:46,760
AssemblyAI. And then you want to make sure that you have a AssemblyAI

14
00:00:46,800 --> 00:00:50,224
API key and that is free to get. So just head on to

15
00:00:50,312 --> 00:00:53,508
AssemblyAI.com comma create an account and you

16
00:00:53,524 --> 00:00:57,404
will get a free API key from AssemblyAI. And then

17
00:00:57,532 --> 00:01:02,636
in your python file just import AssemblyAI

18
00:01:02,748 --> 00:01:06,620
as AAI and then set your AssemblyAI

19
00:01:06,660 --> 00:01:10,640
key, the API key here.

20
00:01:12,140 --> 00:01:16,160
And then you just want to start a transcription job.

21
00:01:17,260 --> 00:01:19,960
So create a transcriber object.

22
00:01:20,920 --> 00:01:24,728
And on that I can start the transcription job. You can either

23
00:01:24,784 --> 00:01:28,616
pass a video or audio file directly to AssemblyAI.

24
00:01:28,728 --> 00:01:32,760
So the video I'm working with in this example is

25
00:01:32,800 --> 00:01:36,368
this one. Can AI learn to use tools?

26
00:01:36,504 --> 00:01:40,280
Well, maybe not physical one, but this is a 4k video and

27
00:01:40,360 --> 00:01:44,072
it is 1.18gb, so it's going

28
00:01:44,096 --> 00:01:47,652
to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,776 --> 00:01:52,040
You can just, if you're on Mac, you can start the quicktime player

30
00:01:52,380 --> 00:01:56,276
and then say file export as audio only

31
00:01:56,388 --> 00:02:00,124
and it will strip the audio of your video. And then

32
00:02:00,292 --> 00:02:03,508
my audio is only 8.7 megabytes,

33
00:02:03,524 --> 00:02:06,996
so it's going to go much faster. So that's why I'm going to

34
00:02:07,028 --> 00:02:10,840
pass the tool former m four a

35
00:02:11,260 --> 00:02:14,764
file to be transcribed. And once

36
00:02:14,812 --> 00:02:18,308
the transcription is ready, all I have to

37
00:02:18,324 --> 00:02:22,436
do is to say export subtitles srt. So this will export

38
00:02:22,468 --> 00:02:25,684
the subtitles in the SRT format if you want.

39
00:02:25,772 --> 00:02:28,956
It can also export them in the VTT format.

40
00:02:29,068 --> 00:02:32,436
So I'll use the SRT format right now. You don't have to pass

41
00:02:32,468 --> 00:02:36,364
anything to it, but if you want to specify how many characters

42
00:02:36,452 --> 00:02:41,394
maximum you want on each caption, you can specify chars

43
00:02:41,482 --> 00:02:44,634
per caption variable. And this is going to be an

44
00:02:44,682 --> 00:02:48,370
integer so we can specify it to be 100 to

45
00:02:48,450 --> 00:02:52,258
50. I think overall is generally between 81

46
00:02:52,274 --> 00:02:56,082
hundred. So 50 would be a bit short and 150 would

47
00:02:56,106 --> 00:02:59,818
be a bit long. But we don't have to specify this, we'll just use a

48
00:02:59,834 --> 00:03:03,274
default value. And then I'm just going to open

49
00:03:03,402 --> 00:03:07,258
a file. I'll just call this subtitles

50
00:03:07,394 --> 00:03:11,210
srta with write permission

51
00:03:14,070 --> 00:03:19,478
and then write my subtitles in there and

52
00:03:19,494 --> 00:03:23,078
then close the file. All right,

53
00:03:23,214 --> 00:03:26,230
let's run this and see how it goes. All right, now that

54
00:03:26,270 --> 00:03:29,450
this is done, let's go and take a look.

55
00:03:30,790 --> 00:03:34,526
I can open it with text editor and this is

56
00:03:34,598 --> 00:03:37,550
what it looks like. And this would be as you can see,

57
00:03:37,590 --> 00:03:41,102
this is timed and it will be

58
00:03:41,126 --> 00:03:44,450
accepted by anywhere that accepts the SRT files.

59
00:03:44,910 --> 00:03:48,718
You can upload it to YouTube for example with your video or as

60
00:03:48,734 --> 00:03:52,486
far as I know, on the VLC player too. You can add subtitles on top

61
00:03:52,518 --> 00:03:55,998
of a video that you have and that's how you can

62
00:03:56,054 --> 00:03:59,446
get subtitles for your videos. In just how many

63
00:03:59,478 --> 00:04:02,822
lines of code? 12345 lines of code.

64
00:04:02,846 --> 00:04:06,902
I mean, just count this as one, you know, just writing it into

65
00:04:07,046 --> 00:04:10,382
file. So that's it. If you have any questions, make sure

66
00:04:10,406 --> 00:04:12,930
to leave them down below in the comment section.

67
00:04:14,030 --> 00:04:17,078
If you want to learn more about this functionality,

68
00:04:17,134 --> 00:04:20,774
you can go to the AssemblyAI documentation or the SDK

69
00:04:20,822 --> 00:04:23,902
documentation on GitHub. I will make sure to leave links for

70
00:04:23,926 --> 00:04:27,438
you in the description below. Thanks for watching and I will see you in

71
00:04:27,454 --> 00:04:28,330
the next video.

