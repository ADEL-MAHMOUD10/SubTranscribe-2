WEBVTT

00:00.200 --> 00:03.374
If you want to quickly add subtitles to your videos and take them from

00:03.422 --> 00:07.766
this based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.182
like to this in few or zero shot settings.

00:11.286 --> 00:14.750
When it comes to natural language processing tasks, you can do it with

00:14.790 --> 00:18.262
AssemblyAI and it's going to be just a couple of lines of code

00:18.326 --> 00:22.662
very quick. Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.964
you're going to get time subtitles that you can upload to YouTube

00:27.102 --> 00:30.416
or use on your local computer however you like. The first

00:30.448 --> 00:33.664
thing that you want to do is to make sure that you have the AssemblyAI

00:33.712 --> 00:37.096
SDK installed. And for that all you have to do is go to your

00:37.128 --> 00:40.928
terminal and write down pip install AssemblyAI and that

00:40.944 --> 00:43.936
will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.200
And then you want to make sure that you have a AssemblyAI API

00:47.240 --> 00:51.544
key and that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:54.932
comma create an account and you will get a free API key

00:54.956 --> 00:58.028
from AssemblyAI. And then in your

00:58.084 --> 01:02.636
python file just import AssemblyAI

01:02.748 --> 01:07.240
as AAI and then set your AssemblyAI key,

01:07.660 --> 01:10.640
the API key here.

01:12.140 --> 01:15.540
And then you just want to start a transcription

01:15.580 --> 01:19.960
job. So create a transcriber object.

01:20.920 --> 01:24.728
And on that I can start the transcription job. You can either

01:24.784 --> 01:28.616
pass a video or audio file directly to AssemblyAI.

01:28.728 --> 01:32.760
So the video I'm working with in this example is

01:32.800 --> 01:36.368
this one. Can AI learn to use tools?

01:36.504 --> 01:40.720
Well, maybe not physical one, but this is a 4k video and it

01:40.800 --> 01:44.256
is 1.18gb, so it's going to

01:44.288 --> 01:47.652
take some time to be uploaded to AssemblyAI instead.

01:47.776 --> 01:51.404
You can just, if you're on Mac, you can start the quicktime

01:51.452 --> 01:54.796
player and then say file export

01:54.868 --> 01:58.124
as audio only and it will strip the audio of

01:58.172 --> 02:01.364
your video. And then my audio is

02:01.412 --> 02:05.160
only 8.7 megabytes, so it's going to go much faster.

02:05.500 --> 02:09.740
So that's why I'm going to pass the tool former m

02:09.780 --> 02:13.292
four a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.092
So this will export the subtitles in the SRT format if

02:25.116 --> 02:28.956
you want. It can also export them in the VTT format.

02:29.068 --> 02:32.436
So I'll use the SRT format right now. You don't have to pass

02:32.468 --> 02:36.364
anything to it, but if you want to specify how many characters

02:36.452 --> 02:41.394
maximum you want on each caption, you can specify chars

02:41.482 --> 02:44.634
per caption variable. And this is going to be an

02:44.682 --> 02:47.930
integer so we can specify it to be 100

02:48.010 --> 02:52.258
to 50. I think overall is generally between 81

02:52.274 --> 02:55.842
hundred. So 50 would be a bit short and 150

02:55.906 --> 02:59.666
would be a bit long. But we don't have to specify this, we'll just use

02:59.698 --> 03:03.274
a default value. And then I'm just going to open

03:03.402 --> 03:07.258
a file. I'll just call this subtitles

03:07.394 --> 03:11.210
srta with write permission

03:14.070 --> 03:19.478
and then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:26.886
let's run this and see how it goes. All right, now that this is

03:26.958 --> 03:29.450
done, let's go and take a look.

03:30.790 --> 03:34.006
I can open it with text editor and

03:34.038 --> 03:37.550
this is what it looks like. And this would be as you can see,

03:37.590 --> 03:41.102
this is timed and it will be

03:41.126 --> 03:44.450
accepted by anywhere that accepts the SRT files.

03:44.910 --> 03:48.718
You can upload it to YouTube for example with your video or as

03:48.734 --> 03:52.486
far as I know, on the VLC player too. You can add subtitles on top

03:52.518 --> 03:55.742
of a video that you have and that's how you

03:55.766 --> 03:59.278
can get subtitles for your videos. In just how

03:59.294 --> 04:02.822
many lines of code? 12345 lines of code.

04:02.846 --> 04:06.902
I mean, just count this as one, you know, just writing it into

04:07.046 --> 04:10.382
file. So that's it. If you have any questions, make sure

04:10.406 --> 04:14.414
to leave them down below in the comment section. If you

04:14.422 --> 04:17.678
want to learn more about this functionality, you can go to

04:17.694 --> 04:21.598
the AssemblyAI documentation or the SDK documentation

04:21.694 --> 04:25.302
on GitHub. I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
