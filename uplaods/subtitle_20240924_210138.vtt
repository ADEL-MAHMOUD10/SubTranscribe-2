WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.766
based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.182
like to this in few or zero shot settings.

00:11.286 --> 00:14.542
When it comes to natural language processing tasks, you can do it

00:14.566 --> 00:18.262
with AssemblyAI and it's going to be just a couple of lines of code

00:18.326 --> 00:22.662
very quick. Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.964
you're going to get time subtitles that you can upload to YouTube

00:27.102 --> 00:30.416
or use on your local computer however you like. The first

00:30.448 --> 00:33.664
thing that you want to do is to make sure that you have the AssemblyAI

00:33.712 --> 00:37.704
SDK installed. And for that all you have to do is go to your terminal

00:37.832 --> 00:41.504
and write down pip install AssemblyAI and that will install

00:41.552 --> 00:44.768
the python SDK of AssemblyAI. And then you

00:44.784 --> 00:47.952
want to make sure that you have a AssemblyAI API key and

00:47.976 --> 00:51.544
that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:56.200
comma create an account and you will get a free API key from AssemblyAI.

00:56.620 --> 01:00.760
And then in your python file just import

01:01.460 --> 01:04.996
AssemblyAI as AAI and then

01:05.028 --> 01:08.588
set your AssemblyAI key, the API

01:08.644 --> 01:10.640
key here.

01:12.140 --> 01:16.160
And then you just want to start a transcription job.

01:17.260 --> 01:19.960
So create a transcriber object.

01:20.920 --> 01:24.728
And on that I can start the transcription job. You can either

01:24.784 --> 01:28.616
pass a video or audio file directly to AssemblyAI.

01:28.728 --> 01:32.216
So the video I'm working with in this example

01:32.408 --> 01:36.368
is this one. Can AI learn to use tools?

01:36.504 --> 01:40.280
Well, maybe not physical one, but this is a 4k video and

01:40.360 --> 01:43.880
it is 1.18gb, so it's

01:43.920 --> 01:47.652
going to take some time to be uploaded to AssemblyAI instead.

01:47.776 --> 01:51.404
You can just, if you're on Mac, you can start the quicktime

01:51.452 --> 01:54.796
player and then say file export

01:54.868 --> 01:58.476
as audio only and it will strip the audio of your

01:58.548 --> 02:02.028
video. And then my audio is only

02:02.204 --> 02:05.160
8.7 megabytes, so it's going to go much faster.

02:05.500 --> 02:09.740
So that's why I'm going to pass the tool former m

02:09.780 --> 02:13.292
four a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:24.692
So this will export the subtitles in the SRT format

02:24.836 --> 02:28.956
if you want. It can also export them in the VTT format.

02:29.068 --> 02:32.780
So I'll use the SRT format right now. You don't have to pass anything

02:32.820 --> 02:36.364
to it, but if you want to specify how many characters

02:36.452 --> 02:40.120
maximum you want on each caption, you can specify

02:40.650 --> 02:43.426
chars per caption variable.

02:43.498 --> 02:46.562
And this is going to be an integer so we can

02:46.626 --> 02:50.650
specify it to be 100 to 50. I think overall

02:50.690 --> 02:54.010
is generally between 81 hundred. So 50 would be a bit

02:54.050 --> 02:57.898
short and 150 would be a bit long. But we

02:57.914 --> 03:00.790
don't have to specify this, we'll just use a default value.

03:01.130 --> 03:05.258
And then I'm just going to open a file.

03:05.434 --> 03:08.786
I'll just call this subtitles srta

03:08.928 --> 03:14.406
with write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:27.286
let's run this and see how it goes. All right, now that this is done,

03:27.358 --> 03:29.450
let's go and take a look.

03:30.790 --> 03:34.206
I can open it with text editor and this

03:34.238 --> 03:37.550
is what it looks like. And this would be as you can see,

03:37.590 --> 03:41.654
this is timed and it will be accepted

03:41.702 --> 03:45.542
by anywhere that accepts the SRT files. You can upload

03:45.566 --> 03:48.838
it to YouTube for example with your video or as far

03:48.854 --> 03:52.318
as I know, on the VLC player too. You can add subtitles on

03:52.334 --> 03:55.550
top of a video that you have and that's how

03:55.590 --> 03:59.278
you can get subtitles for your videos. In just how

03:59.294 --> 04:02.822
many lines of code? 12345 lines of code.

04:02.846 --> 04:06.902
I mean, just count this as one, you know, just writing it into

04:07.046 --> 04:10.958
file. So that's it. If you have any questions, make sure to leave them

04:11.014 --> 04:12.930
down below in the comment section.

04:14.030 --> 04:17.678
If you want to learn more about this functionality, you can go to

04:17.694 --> 04:21.598
the AssemblyAI documentation or the SDK documentation

04:21.694 --> 04:25.302
on GitHub. I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
