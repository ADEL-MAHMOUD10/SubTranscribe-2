1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:07,294
based on this research, now AI can learn to use digital

3
00:00:07,382 --> 00:00:11,182
tools like to this in few or zero shot settings.

4
00:00:11,286 --> 00:00:14,398
When it comes to natural language processing tasks, you can do

5
00:00:14,414 --> 00:00:18,262
it with AssemblyAI and it's going to be just a couple of lines of code

6
00:00:18,326 --> 00:00:21,486
very quick. Based on your transcription that you submitted

7
00:00:21,518 --> 00:00:25,118
to AssemblyAI, you're going to get time subtitles that you

8
00:00:25,134 --> 00:00:29,112
can upload to YouTube or use on your local computer however

9
00:00:29,176 --> 00:00:32,136
you like. The first thing that you want to do is to make sure that

10
00:00:32,168 --> 00:00:35,664
you have the AssemblyAI SDK installed. And for that

11
00:00:35,712 --> 00:00:39,496
all you have to do is go to your terminal and write down pip install

12
00:00:39,568 --> 00:00:43,936
AssemblyAI and that will install the python SDK of AssemblyAI.

13
00:00:44,088 --> 00:00:47,632
And then you want to make sure that you have a AssemblyAI API key

14
00:00:47,736 --> 00:00:51,520
and that is free to get. So just head on to AssemblyAI.com

15
00:00:51,560 --> 00:00:55,092
comma create an account and you will get a free API key from

16
00:00:55,116 --> 00:00:59,132
AssemblyAI. And then in your python file

17
00:00:59,276 --> 00:01:03,092
just import AssemblyAI as

18
00:01:03,156 --> 00:01:07,240
AAI and then set your AssemblyAI key,

19
00:01:07,660 --> 00:01:10,640
the API key here.

20
00:01:12,140 --> 00:01:16,160
And then you just want to start a transcription job.

21
00:01:17,260 --> 00:01:19,960
So create a transcriber object.

22
00:01:20,920 --> 00:01:23,620
And on that I can start the transcription job.

23
00:01:23,920 --> 00:01:27,536
You can either pass a video or audio file directly to

24
00:01:27,568 --> 00:01:31,248
AssemblyAI. So the video I'm working with in this

25
00:01:31,304 --> 00:01:35,120
example is this one. Can AI

26
00:01:35,160 --> 00:01:38,280
learn to use tools? Well, maybe not physical one,

27
00:01:38,400 --> 00:01:42,976
but this is a 4k video and it is 1.18gb,

28
00:01:43,008 --> 00:01:47,652
so it's going to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,776 --> 00:01:52,040
You can just, if you're on Mac, you can start the quicktime player

30
00:01:52,380 --> 00:01:56,276
and then say file export as audio only

31
00:01:56,388 --> 00:02:00,644
and it will strip the audio of your video. And then my

32
00:02:00,692 --> 00:02:04,148
audio is only 8.7 megabytes, so it's going to

33
00:02:04,164 --> 00:02:07,612
go much faster. So that's why I'm going to pass the

34
00:02:07,676 --> 00:02:10,840
tool former m four a

35
00:02:11,260 --> 00:02:14,764
file to be transcribed. And once

36
00:02:14,812 --> 00:02:18,308
the transcription is ready, all I have to

37
00:02:18,324 --> 00:02:21,820
do is to say export subtitles srt. So this

38
00:02:21,860 --> 00:02:25,092
will export the subtitles in the SRT format if

39
00:02:25,116 --> 00:02:28,956
you want. It can also export them in the VTT format.

40
00:02:29,068 --> 00:02:32,436
So I'll use the SRT format right now. You don't have to pass

41
00:02:32,468 --> 00:02:36,364
anything to it, but if you want to specify how many characters

42
00:02:36,452 --> 00:02:41,394
maximum you want on each caption, you can specify chars

43
00:02:41,482 --> 00:02:45,418
per caption variable. And this is going to be an integer

44
00:02:45,594 --> 00:02:49,122
so we can specify it to be 100 to 50.

45
00:02:49,306 --> 00:02:52,594
I think overall is generally between 81 hundred.

46
00:02:52,682 --> 00:02:56,082
So 50 would be a bit short and 150 would

47
00:02:56,106 --> 00:02:59,090
be a bit long. But we don't have to specify this,

48
00:02:59,130 --> 00:03:02,706
we'll just use a default value. And then I'm just going to

49
00:03:02,778 --> 00:03:06,370
open a file. I'll just call this

50
00:03:06,410 --> 00:03:10,382
subtitles srta with write

51
00:03:10,446 --> 00:03:14,406
permission and

52
00:03:14,438 --> 00:03:19,478
then write my subtitles in there and

53
00:03:19,494 --> 00:03:23,078
then close the file. All right,

54
00:03:23,214 --> 00:03:27,286
let's run this and see how it goes. All right, now that this is done,

55
00:03:27,358 --> 00:03:31,246
let's go and take a look. I can

56
00:03:31,278 --> 00:03:34,782
open it with text editor and this is what

57
00:03:34,806 --> 00:03:40,142
it looks like. And this would be as you can see, this is timed

58
00:03:40,286 --> 00:03:43,670
and it will be accepted by anywhere that accepts the SRT

59
00:03:43,710 --> 00:03:47,006
files. You can upload it to YouTube for example with

60
00:03:47,038 --> 00:03:50,342
your video or as far as I know, on the VLC player

61
00:03:50,406 --> 00:03:54,174
too. You can add subtitles on top of a video that you have

62
00:03:54,302 --> 00:03:57,846
and that's how you can get subtitles for your videos.

63
00:03:57,958 --> 00:04:00,422
In just how many lines of code?

64
00:04:00,566 --> 00:04:04,046
12345 lines of code. I mean, just count this as

65
00:04:04,078 --> 00:04:07,774
one, you know, just writing it into file.

66
00:04:07,902 --> 00:04:11,558
So that's it. If you have any questions, make sure to leave them down below

67
00:04:11,614 --> 00:04:14,870
in the comment section. If you want to learn

68
00:04:14,910 --> 00:04:18,814
more about this functionality, you can go to the AssemblyAI

69
00:04:18,862 --> 00:04:22,758
documentation or the SDK documentation on GitHub. I will make

70
00:04:22,774 --> 00:04:26,702
sure to leave links for you in the description below. Thanks for watching and

71
00:04:26,766 --> 00:04:28,330
I will see you in the next video.

