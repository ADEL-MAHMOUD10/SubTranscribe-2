1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:07,766
based on this research, now AI can learn to use digital tools

3
00:00:07,798 --> 00:00:11,182
like to this in few or zero shot settings.

4
00:00:11,286 --> 00:00:14,542
When it comes to natural language processing tasks, you can do it

5
00:00:14,566 --> 00:00:18,598
with AssemblyAI and it's going to be just a couple of lines of code very

6
00:00:18,654 --> 00:00:22,662
quick. Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,766 --> 00:00:26,054
you're going to get time subtitles that you can upload to

8
00:00:26,142 --> 00:00:29,848
YouTube or use on your local computer however you like.

9
00:00:29,984 --> 00:00:32,512
The first thing that you want to do is to make sure that you have

10
00:00:32,536 --> 00:00:35,872
the AssemblyAI SDK installed. And for that all

11
00:00:35,896 --> 00:00:39,016
you have to do is go to your terminal and write down pip

12
00:00:39,088 --> 00:00:42,680
install AssemblyAI and that will install the python SDK

13
00:00:42,720 --> 00:00:46,760
of AssemblyAI. And then you want to make sure that you have a AssemblyAI

14
00:00:46,800 --> 00:00:51,544
API key and that is free to get. So just head on to AssemblyAI.com

15
00:00:51,592 --> 00:00:55,092
comma create an account and you will get a free API key from

16
00:00:55,116 --> 00:00:59,132
AssemblyAI. And then in your python file

17
00:00:59,276 --> 00:01:02,636
just import AssemblyAI

18
00:01:02,748 --> 00:01:06,620
as AAI and then set your AssemblyAI

19
00:01:06,660 --> 00:01:10,640
key, the API key here.

20
00:01:12,140 --> 00:01:15,540
And then you just want to start a transcription

21
00:01:15,580 --> 00:01:19,244
job. So create a transcriber

22
00:01:19,292 --> 00:01:23,620
object. And on that I can start the transcription job.

23
00:01:23,920 --> 00:01:27,536
You can either pass a video or audio file directly to

24
00:01:27,568 --> 00:01:30,944
AssemblyAI. So the video I'm working with in

25
00:01:30,992 --> 00:01:33,620
this example is this one.

26
00:01:34,440 --> 00:01:38,280
Can AI learn to use tools? Well, maybe not physical one,

27
00:01:38,400 --> 00:01:42,976
but this is a 4k video and it is 1.18gb,

28
00:01:43,008 --> 00:01:46,848
so it's going to take some time to be uploaded to AssemblyAI

29
00:01:46,984 --> 00:01:50,532
instead. You can just, if you're on Mac, you can

30
00:01:50,596 --> 00:01:54,796
start the quicktime player and then say file export

31
00:01:54,868 --> 00:01:58,476
as audio only and it will strip the audio of your

32
00:01:58,548 --> 00:02:03,028
video. And then my audio is only 8.7

33
00:02:03,084 --> 00:02:06,764
megabytes, so it's going to go much faster. So that's why I'm going

34
00:02:06,812 --> 00:02:10,840
to pass the tool former m four a

35
00:02:11,260 --> 00:02:15,956
file to be transcribed. And once the transcription

36
00:02:16,068 --> 00:02:19,652
is ready, all I have to do is to say export

37
00:02:19,716 --> 00:02:23,084
subtitles srt. So this will export the subtitles

38
00:02:23,132 --> 00:02:26,804
in the SRT format if you want. It can also export

39
00:02:26,852 --> 00:02:30,828
them in the VTT format. So I'll use the SRT format

40
00:02:30,884 --> 00:02:34,292
right now. You don't have to pass anything to it, but if you

41
00:02:34,316 --> 00:02:37,524
want to specify how many characters maximum you want

42
00:02:37,572 --> 00:02:41,394
on each caption, you can specify chars

43
00:02:41,482 --> 00:02:45,418
per caption variable. And this is going to be an integer

44
00:02:45,594 --> 00:02:49,122
so we can specify it to be 100 to 50.

45
00:02:49,306 --> 00:02:52,594
I think overall is generally between 81 hundred.

46
00:02:52,682 --> 00:02:56,218
So 50 would be a bit short and 150 would be

47
00:02:56,234 --> 00:02:59,666
a bit long. But we don't have to specify this, we'll just use

48
00:02:59,698 --> 00:03:03,274
a default value. And then I'm just going to open

49
00:03:03,402 --> 00:03:08,786
a file. I'll just call this subtitles srta

50
00:03:08,928 --> 00:03:14,406
with write permission and

51
00:03:14,438 --> 00:03:19,478
then write my subtitles in there and

52
00:03:19,494 --> 00:03:23,078
then close the file. All right,

53
00:03:23,214 --> 00:03:26,886
let's run this and see how it goes. All right, now that this is

54
00:03:26,958 --> 00:03:29,450
done, let's go and take a look.

55
00:03:30,790 --> 00:03:34,006
I can open it with text editor and

56
00:03:34,038 --> 00:03:37,214
this is what it looks like. And this would be as you

57
00:03:37,222 --> 00:03:41,102
can see, this is timed and it will be

58
00:03:41,126 --> 00:03:44,450
accepted by anywhere that accepts the SRT files.

59
00:03:44,910 --> 00:03:48,438
You can upload it to YouTube for example with your video or

60
00:03:48,534 --> 00:03:52,318
as far as I know, on the VLC player too. You can add subtitles on

61
00:03:52,334 --> 00:03:55,550
top of a video that you have and that's how

62
00:03:55,590 --> 00:03:58,886
you can get subtitles for your videos. In just

63
00:03:59,038 --> 00:04:02,822
how many lines of code? 12345 lines of code.

64
00:04:02,846 --> 00:04:06,902
I mean, just count this as one, you know, just writing it into

65
00:04:07,046 --> 00:04:09,990
file. So that's it. If you have any questions,

66
00:04:10,070 --> 00:04:12,930
make sure to leave them down below in the comment section.

67
00:04:14,030 --> 00:04:17,558
If you want to learn more about this functionality, you can go

68
00:04:17,574 --> 00:04:21,598
to the AssemblyAI documentation or the SDK documentation

69
00:04:21,694 --> 00:04:25,302
on GitHub. I will make sure to leave links for you in the description below.

70
00:04:25,446 --> 00:04:28,330
Thanks for watching and I will see you in the next video.

