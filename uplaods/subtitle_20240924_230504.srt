1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:07,766
based on this research, now AI can learn to use digital tools

3
00:00:07,798 --> 00:00:11,622
like to this in few or zero shot settings. When it

4
00:00:11,646 --> 00:00:15,766
comes to natural language processing tasks, you can do it with AssemblyAI

5
00:00:15,878 --> 00:00:19,134
and it's going to be just a couple of lines of code very quick.

6
00:00:19,262 --> 00:00:22,662
Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,766 --> 00:00:26,964
you're going to get time subtitles that you can upload to YouTube

8
00:00:27,102 --> 00:00:30,416
or use on your local computer however you like. The first

9
00:00:30,448 --> 00:00:33,664
thing that you want to do is to make sure that you have the AssemblyAI

10
00:00:33,712 --> 00:00:36,928
SDK installed. And for that all you have to do is go to

11
00:00:36,944 --> 00:00:40,792
your terminal and write down pip install AssemblyAI and

12
00:00:40,816 --> 00:00:43,936
that will install the python SDK of AssemblyAI.

13
00:00:44,088 --> 00:00:47,632
And then you want to make sure that you have a AssemblyAI API key

14
00:00:47,736 --> 00:00:51,920
and that is free to get. So just head on to AssemblyAI.com comma

15
00:00:52,000 --> 00:00:56,200
create an account and you will get a free API key from AssemblyAI.

16
00:00:56,620 --> 00:00:59,916
And then in your python file just

17
00:01:00,068 --> 00:01:03,880
import AssemblyAI as AAI

18
00:01:04,500 --> 00:01:08,588
and then set your AssemblyAI key, the API

19
00:01:08,644 --> 00:01:10,640
key here.

20
00:01:12,140 --> 00:01:15,540
And then you just want to start a transcription

21
00:01:15,580 --> 00:01:19,244
job. So create a transcriber

22
00:01:19,292 --> 00:01:23,016
object. And on that I can start the transcription

23
00:01:23,048 --> 00:01:26,864
job. You can either pass a video or audio file

24
00:01:26,912 --> 00:01:30,616
directly to AssemblyAI. So the video I'm working with

25
00:01:30,688 --> 00:01:33,620
in this example is this one.

26
00:01:34,440 --> 00:01:37,784
Can AI learn to use tools? Well, maybe not physical

27
00:01:37,832 --> 00:01:42,976
one, but this is a 4k video and it is 1.18gb,

28
00:01:43,008 --> 00:01:46,848
so it's going to take some time to be uploaded to AssemblyAI

29
00:01:46,984 --> 00:01:49,924
instead. You can just, if you're on Mac,

30
00:01:50,052 --> 00:01:54,140
you can start the quicktime player and then say file

31
00:01:54,300 --> 00:01:57,844
export as audio only and it will strip the audio

32
00:01:57,892 --> 00:02:02,028
of your video. And then my audio is only

33
00:02:02,204 --> 00:02:05,160
8.7 megabytes, so it's going to go much faster.

34
00:02:05,500 --> 00:02:09,740
So that's why I'm going to pass the tool former m

35
00:02:09,780 --> 00:02:13,292
four a file to be transcribed.

36
00:02:13,436 --> 00:02:17,160
And once the transcription is ready,

37
00:02:17,540 --> 00:02:21,236
all I have to do is to say export subtitles srt.

38
00:02:21,348 --> 00:02:24,692
So this will export the subtitles in the SRT format

39
00:02:24,836 --> 00:02:28,276
if you want. It can also export them in the VTT

40
00:02:28,348 --> 00:02:31,444
format. So I'll use the SRT format right now.

41
00:02:31,532 --> 00:02:35,140
You don't have to pass anything to it, but if you want to specify

42
00:02:35,220 --> 00:02:38,804
how many characters maximum you want on each caption,

43
00:02:38,932 --> 00:02:42,826
you can specify chars per caption

44
00:02:42,898 --> 00:02:46,562
variable. And this is going to be an integer so we can

45
00:02:46,626 --> 00:02:50,058
specify it to be 100 to 50. I think

46
00:02:50,194 --> 00:02:53,362
overall is generally between 81 hundred. So 50

47
00:02:53,426 --> 00:02:57,110
would be a bit short and 150 would be a bit long.

48
00:02:57,490 --> 00:03:00,790
But we don't have to specify this, we'll just use a default value.

49
00:03:01,130 --> 00:03:05,258
And then I'm just going to open a file.

50
00:03:05,434 --> 00:03:09,610
I'll just call this subtitles srta with

51
00:03:09,910 --> 00:03:14,406
write permission and

52
00:03:14,438 --> 00:03:19,478
then write my subtitles in there and

53
00:03:19,494 --> 00:03:23,078
then close the file. All right,

54
00:03:23,214 --> 00:03:26,518
let's run this and see how it goes. All right, now that this

55
00:03:26,574 --> 00:03:29,450
is done, let's go and take a look.

56
00:03:30,790 --> 00:03:34,206
I can open it with text editor and this

57
00:03:34,238 --> 00:03:37,342
is what it looks like. And this would be as you can

58
00:03:37,366 --> 00:03:41,102
see, this is timed and it will be

59
00:03:41,126 --> 00:03:44,450
accepted by anywhere that accepts the SRT files.

60
00:03:44,910 --> 00:03:48,438
You can upload it to YouTube for example with your video or

61
00:03:48,534 --> 00:03:52,318
as far as I know, on the VLC player too. You can add subtitles on

62
00:03:52,334 --> 00:03:55,742
top of a video that you have and that's how you

63
00:03:55,766 --> 00:03:59,446
can get subtitles for your videos. In just how many

64
00:03:59,478 --> 00:04:02,822
lines of code? 12345 lines of code.

65
00:04:02,846 --> 00:04:06,902
I mean, just count this as one, you know, just writing it into

66
00:04:07,046 --> 00:04:10,518
file. So that's it. If you have any questions, make sure to

67
00:04:10,534 --> 00:04:12,930
leave them down below in the comment section.

68
00:04:14,030 --> 00:04:17,406
If you want to learn more about this functionality, you can

69
00:04:17,438 --> 00:04:21,598
go to the AssemblyAI documentation or the SDK documentation

70
00:04:21,694 --> 00:04:25,302
on GitHub. I will make sure to leave links for you in the description below.

71
00:04:25,446 --> 00:04:28,330
Thanks for watching and I will see you in the next video.

