WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.766
based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.622
like to this in few or zero shot settings. When it

00:11.646 --> 00:14.750
comes to natural language processing tasks, you can do it with

00:14.790 --> 00:18.598
AssemblyAI and it's going to be just a couple of lines of code very

00:18.654 --> 00:22.662
quick. Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.964
you're going to get time subtitles that you can upload to YouTube

00:27.102 --> 00:29.848
or use on your local computer however you like.

00:29.984 --> 00:32.512
The first thing that you want to do is to make sure that you have

00:32.536 --> 00:36.192
the AssemblyAI SDK installed. And for that all you have

00:36.216 --> 00:39.496
to do is go to your terminal and write down pip install

00:39.568 --> 00:43.936
AssemblyAI and that will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.632
And then you want to make sure that you have a AssemblyAI API key

00:47.736 --> 00:51.544
and that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:55.092
comma create an account and you will get a free API key from

00:55.116 --> 00:59.132
AssemblyAI. And then in your python file

00:59.276 --> 01:03.880
just import AssemblyAI as AAI

01:04.500 --> 01:08.588
and then set your AssemblyAI key, the API

01:08.644 --> 01:10.640
key here.

01:12.140 --> 01:15.540
And then you just want to start a transcription

01:15.580 --> 01:19.244
job. So create a transcriber

01:19.292 --> 01:23.016
object. And on that I can start the transcription

01:23.048 --> 01:26.864
job. You can either pass a video or audio file

01:26.912 --> 01:30.616
directly to AssemblyAI. So the video I'm working with

01:30.688 --> 01:33.620
in this example is this one.

01:34.440 --> 01:37.784
Can AI learn to use tools? Well, maybe not physical

01:37.832 --> 01:42.976
one, but this is a 4k video and it is 1.18gb,

01:43.008 --> 01:46.848
so it's going to take some time to be uploaded to AssemblyAI

01:46.984 --> 01:49.924
instead. You can just, if you're on Mac,

01:50.052 --> 01:54.140
you can start the quicktime player and then say file

01:54.300 --> 01:57.844
export as audio only and it will strip the audio

01:57.892 --> 02:02.028
of your video. And then my audio is only

02:02.204 --> 02:05.160
8.7 megabytes, so it's going to go much faster.

02:05.500 --> 02:09.740
So that's why I'm going to pass the tool former m

02:09.780 --> 02:13.292
four a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.300
So this will export the subtitles in the SRT format if you

02:25.340 --> 02:28.956
want. It can also export them in the VTT format.

02:29.068 --> 02:32.252
So I'll use the SRT format right now. You don't have to

02:32.276 --> 02:36.364
pass anything to it, but if you want to specify how many characters

02:36.452 --> 02:40.120
maximum you want on each caption, you can specify

02:40.650 --> 02:44.402
chars per caption variable. And this is going to be

02:44.426 --> 02:47.930
an integer so we can specify it to be 100

02:48.010 --> 02:51.562
to 50. I think overall is generally between

02:51.626 --> 02:54.682
81 hundred. So 50 would be a bit short

02:54.866 --> 02:58.802
and 150 would be a bit long. But we don't have to specify

02:58.866 --> 03:02.074
this, we'll just use a default value. And then I'm just

03:02.122 --> 03:05.258
going to open a file.

03:05.434 --> 03:08.786
I'll just call this subtitles srta

03:08.928 --> 03:14.406
with write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:26.886
let's run this and see how it goes. All right, now that this is

03:26.958 --> 03:29.450
done, let's go and take a look.

03:30.790 --> 03:34.206
I can open it with text editor and this

03:34.238 --> 03:37.550
is what it looks like. And this would be as you can see,

03:37.590 --> 03:40.926
this is timed and it will

03:40.958 --> 03:44.450
be accepted by anywhere that accepts the SRT files.

03:44.910 --> 03:48.718
You can upload it to YouTube for example with your video or as

03:48.734 --> 03:52.318
far as I know, on the VLC player too. You can add subtitles on

03:52.334 --> 03:56.846
top of a video that you have and that's how you can get subtitles

03:56.878 --> 04:00.422
for your videos. In just how many lines of code?

04:00.566 --> 04:03.686
12345 lines of code. I mean, just count

04:03.718 --> 04:07.774
this as one, you know, just writing it into file.

04:07.902 --> 04:11.558
So that's it. If you have any questions, make sure to leave them down below

04:11.614 --> 04:15.134
in the comment section. If you want to learn more

04:15.182 --> 04:18.814
about this functionality, you can go to the AssemblyAI

04:18.862 --> 04:22.902
documentation or the SDK documentation on GitHub. I will make sure

04:22.926 --> 04:26.342
to leave links for you in the description below. Thanks for watching

04:26.406 --> 04:28.330
and I will see you in the next video.
