WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.766
based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.622
like to this in few or zero shot settings. When it

00:11.646 --> 00:15.766
comes to natural language processing tasks, you can do it with AssemblyAI

00:15.878 --> 00:19.134
and it's going to be just a couple of lines of code very quick.

00:19.262 --> 00:22.662
Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.964
you're going to get time subtitles that you can upload to YouTube

00:27.102 --> 00:30.416
or use on your local computer however you like. The first

00:30.448 --> 00:33.664
thing that you want to do is to make sure that you have the AssemblyAI

00:33.712 --> 00:37.096
SDK installed. And for that all you have to do is go to your

00:37.128 --> 00:40.792
terminal and write down pip install AssemblyAI and

00:40.816 --> 00:43.936
that will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.200
And then you want to make sure that you have a AssemblyAI API

00:47.240 --> 00:51.544
key and that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:55.092
comma create an account and you will get a free API key from

00:55.116 --> 00:58.436
AssemblyAI. And then in your python

00:58.468 --> 01:02.636
file just import AssemblyAI

01:02.748 --> 01:06.620
as AAI and then set your AssemblyAI

01:06.660 --> 01:10.640
key, the API key here.

01:12.140 --> 01:15.540
And then you just want to start a transcription

01:15.580 --> 01:19.244
job. So create a transcriber

01:19.292 --> 01:23.016
object. And on that I can start the transcription

01:23.048 --> 01:26.864
job. You can either pass a video or audio file

01:26.912 --> 01:30.944
directly to AssemblyAI. So the video I'm working with in

01:30.992 --> 01:35.120
this example is this one. Can AI

01:35.160 --> 01:39.032
learn to use tools? Well, maybe not physical one, but this is a

01:39.056 --> 01:42.976
4k video and it is 1.18gb,

01:43.008 --> 01:47.652
so it's going to take some time to be uploaded to AssemblyAI instead.

01:47.776 --> 01:51.404
You can just, if you're on Mac, you can start the quicktime

01:51.452 --> 01:55.268
player and then say file export as

01:55.364 --> 01:59.116
audio only and it will strip the audio of your video.

01:59.268 --> 02:03.028
And then my audio is only 8.7

02:03.084 --> 02:06.516
megabytes, so it's going to go much faster. So that's why I'm

02:06.548 --> 02:10.124
going to pass the tool former m four

02:10.212 --> 02:13.292
a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.092
So this will export the subtitles in the SRT format if

02:25.116 --> 02:28.276
you want. It can also export them in the VTT

02:28.348 --> 02:31.956
format. So I'll use the SRT format right now. You don't

02:31.988 --> 02:35.684
have to pass anything to it, but if you want to specify how many

02:35.732 --> 02:39.364
characters maximum you want on each caption, you can

02:39.412 --> 02:42.826
specify chars per caption

02:42.898 --> 02:47.010
variable. And this is going to be an integer so we can specify

02:47.050 --> 02:50.650
it to be 100 to 50. I think overall

02:50.690 --> 02:54.682
is generally between 81 hundred. So 50 would be a bit short

02:54.866 --> 02:58.066
and 150 would be a bit long. But we don't

02:58.098 --> 03:01.690
have to specify this, we'll just use a default value. And then

03:01.730 --> 03:05.258
I'm just going to open a file.

03:05.434 --> 03:09.610
I'll just call this subtitles srta with

03:09.910 --> 03:14.406
write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:27.286
let's run this and see how it goes. All right, now that this is done,

03:27.358 --> 03:29.450
let's go and take a look.

03:30.790 --> 03:34.526
I can open it with text editor and this is

03:34.598 --> 03:38.370
what it looks like. And this would be as you can see, this is

03:39.190 --> 03:42.686
timed and it will be accepted by anywhere

03:42.718 --> 03:46.166
that accepts the SRT files. You can upload it to YouTube

03:46.198 --> 03:49.982
for example with your video or as far as I know, on the VLC

03:50.046 --> 03:53.462
player too. You can add subtitles on top of a video that

03:53.486 --> 03:57.022
you have and that's how you can get subtitles for

03:57.046 --> 04:00.422
your videos. In just how many lines of code?

04:00.566 --> 04:03.862
12345 lines of code. I mean, just count this

04:03.886 --> 04:07.774
as one, you know, just writing it into file.

04:07.902 --> 04:11.558
So that's it. If you have any questions, make sure to leave them down below

04:11.614 --> 04:14.870
in the comment section. If you want to learn

04:14.910 --> 04:18.814
more about this functionality, you can go to the AssemblyAI

04:18.862 --> 04:22.318
documentation or the SDK documentation on GitHub.

04:22.374 --> 04:25.302
I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
