WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.766
based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.182
like to this in few or zero shot settings.

00:11.286 --> 00:15.766
When it comes to natural language processing tasks, you can do it with AssemblyAI

00:15.878 --> 00:19.134
and it's going to be just a couple of lines of code very quick.

00:19.262 --> 00:22.662
Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.054
you're going to get time subtitles that you can upload to

00:26.142 --> 00:29.848
YouTube or use on your local computer however you like.

00:29.984 --> 00:32.512
The first thing that you want to do is to make sure that you have

00:32.536 --> 00:36.032
the AssemblyAI SDK installed. And for that all you

00:36.056 --> 00:39.496
have to do is go to your terminal and write down pip install

00:39.568 --> 00:43.936
AssemblyAI and that will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.632
And then you want to make sure that you have a AssemblyAI API key

00:47.736 --> 00:51.544
and that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:56.200
comma create an account and you will get a free API key from AssemblyAI.

00:56.620 --> 01:00.760
And then in your python file just import

01:01.460 --> 01:04.812
AssemblyAI as AAI and

01:04.836 --> 01:08.588
then set your AssemblyAI key, the API

01:08.644 --> 01:10.640
key here.

01:12.140 --> 01:16.160
And then you just want to start a transcription job.

01:17.260 --> 01:19.960
So create a transcriber object.

01:20.920 --> 01:24.728
And on that I can start the transcription job. You can either

01:24.784 --> 01:28.616
pass a video or audio file directly to AssemblyAI.

01:28.728 --> 01:32.760
So the video I'm working with in this example is

01:32.800 --> 01:36.368
this one. Can AI learn to use tools?

01:36.504 --> 01:40.280
Well, maybe not physical one, but this is a 4k video and

01:40.360 --> 01:44.072
it is 1.18gb, so it's going

01:44.096 --> 01:47.652
to take some time to be uploaded to AssemblyAI instead.

01:47.776 --> 01:52.040
You can just, if you're on Mac, you can start the quicktime player

01:52.380 --> 01:55.788
and then say file export as audio

01:55.844 --> 01:59.116
only and it will strip the audio of your video.

01:59.268 --> 02:03.508
And then my audio is only 8.7 megabytes,

02:03.524 --> 02:06.996
so it's going to go much faster. So that's why I'm going to

02:07.028 --> 02:10.124
pass the tool former m four

02:10.212 --> 02:13.292
a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:24.692
So this will export the subtitles in the SRT format

02:24.836 --> 02:28.276
if you want. It can also export them in the VTT

02:28.348 --> 02:31.444
format. So I'll use the SRT format right now.

02:31.532 --> 02:35.140
You don't have to pass anything to it, but if you want to specify

02:35.220 --> 02:38.804
how many characters maximum you want on each caption,

02:38.932 --> 02:42.826
you can specify chars per caption

02:42.898 --> 02:46.562
variable. And this is going to be an integer so we can

02:46.626 --> 02:50.650
specify it to be 100 to 50. I think overall

02:50.690 --> 02:54.010
is generally between 81 hundred. So 50 would be a bit

02:54.050 --> 02:58.066
short and 150 would be a bit long. But we don't

02:58.098 --> 03:00.790
have to specify this, we'll just use a default value.

03:01.130 --> 03:05.258
And then I'm just going to open a file.

03:05.434 --> 03:09.610
I'll just call this subtitles srta with

03:09.910 --> 03:14.406
write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:26.230
let's run this and see how it goes. All right, now that

03:26.270 --> 03:29.450
this is done, let's go and take a look.

03:30.790 --> 03:34.206
I can open it with text editor and this

03:34.238 --> 03:37.550
is what it looks like. And this would be as you can see,

03:37.590 --> 03:41.102
this is timed and it will be

03:41.126 --> 03:44.450
accepted by anywhere that accepts the SRT files.

03:44.910 --> 03:48.718
You can upload it to YouTube for example with your video or as

03:48.734 --> 03:52.486
far as I know, on the VLC player too. You can add subtitles on top

03:52.518 --> 03:55.550
of a video that you have and that's how

03:55.590 --> 03:58.886
you can get subtitles for your videos. In just

03:59.038 --> 04:02.534
how many lines of code? 12345 lines

04:02.542 --> 04:06.902
of code. I mean, just count this as one, you know, just writing it into

04:07.046 --> 04:09.990
file. So that's it. If you have any questions,

04:10.070 --> 04:12.930
make sure to leave them down below in the comment section.

04:14.030 --> 04:17.078
If you want to learn more about this functionality,

04:17.134 --> 04:20.774
you can go to the AssemblyAI documentation or the SDK

04:20.822 --> 04:24.038
documentation on GitHub. I will make sure to leave links for you

04:24.054 --> 04:27.438
in the description below. Thanks for watching and I will see you in

04:27.454 --> 04:28.330
the next video.
