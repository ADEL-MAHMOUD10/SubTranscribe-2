WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.294
based on this research, now AI can learn to use digital

00:07.382 --> 00:11.182
tools like to this in few or zero shot settings.

00:11.286 --> 00:14.542
When it comes to natural language processing tasks, you can do it

00:14.566 --> 00:18.262
with AssemblyAI and it's going to be just a couple of lines of code

00:18.326 --> 00:21.662
very quick. Based on your transcription that you submitted to

00:21.686 --> 00:25.262
AssemblyAI, you're going to get time subtitles that you can

00:25.286 --> 00:29.352
upload to YouTube or use on your local computer however you

00:29.376 --> 00:32.336
like. The first thing that you want to do is to make sure that you

00:32.368 --> 00:35.872
have the AssemblyAI SDK installed. And for that all

00:35.896 --> 00:39.496
you have to do is go to your terminal and write down pip install

00:39.568 --> 00:43.936
AssemblyAI and that will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.952
And then you want to make sure that you have a AssemblyAI API key and

00:47.976 --> 00:51.920
that is free to get. So just head on to AssemblyAI.com comma

00:52.000 --> 00:56.200
create an account and you will get a free API key from AssemblyAI.

00:56.620 --> 00:59.916
And then in your python file just

01:00.068 --> 01:03.880
import AssemblyAI as AAI

01:04.500 --> 01:07.240
and then set your AssemblyAI key,

01:07.660 --> 01:10.640
the API key here.

01:12.140 --> 01:16.160
And then you just want to start a transcription job.

01:17.260 --> 01:19.960
So create a transcriber object.

01:20.920 --> 01:23.620
And on that I can start the transcription job.

01:23.920 --> 01:27.536
You can either pass a video or audio file directly to

01:27.568 --> 01:30.944
AssemblyAI. So the video I'm working with in

01:30.992 --> 01:33.620
this example is this one.

01:34.440 --> 01:38.280
Can AI learn to use tools? Well, maybe not physical one,

01:38.400 --> 01:42.976
but this is a 4k video and it is 1.18gb,

01:43.008 --> 01:46.848
so it's going to take some time to be uploaded to AssemblyAI

01:46.984 --> 01:50.532
instead. You can just, if you're on Mac, you can

01:50.596 --> 01:54.140
start the quicktime player and then say file

01:54.300 --> 01:57.844
export as audio only and it will strip the audio

01:57.892 --> 02:02.028
of your video. And then my audio is only

02:02.204 --> 02:06.100
8.7 megabytes, so it's going to go much faster. So that's

02:06.140 --> 02:09.740
why I'm going to pass the tool former m

02:09.780 --> 02:13.292
four a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.092
So this will export the subtitles in the SRT format if

02:25.116 --> 02:28.956
you want. It can also export them in the VTT format.

02:29.068 --> 02:32.252
So I'll use the SRT format right now. You don't have to

02:32.276 --> 02:35.436
pass anything to it, but if you want to specify how

02:35.468 --> 02:38.804
many characters maximum you want on each caption,

02:38.932 --> 02:42.826
you can specify chars per caption

02:42.898 --> 02:46.562
variable. And this is going to be an integer so we can

02:46.626 --> 02:50.650
specify it to be 100 to 50. I think overall

02:50.690 --> 02:54.682
is generally between 81 hundred. So 50 would be a bit short

02:54.866 --> 02:58.218
and 150 would be a bit long. But we don't have

02:58.234 --> 03:01.690
to specify this, we'll just use a default value. And then

03:01.730 --> 03:05.258
I'm just going to open a file.

03:05.434 --> 03:08.786
I'll just call this subtitles srta

03:08.928 --> 03:14.406
with write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:26.886
let's run this and see how it goes. All right, now that this is

03:26.958 --> 03:29.450
done, let's go and take a look.

03:30.790 --> 03:34.526
I can open it with text editor and this is

03:34.598 --> 03:38.370
what it looks like. And this would be as you can see, this is

03:39.190 --> 03:42.686
timed and it will be accepted by anywhere

03:42.718 --> 03:46.342
that accepts the SRT files. You can upload it to YouTube for

03:46.366 --> 03:49.478
example with your video or as far as I know, on the

03:49.494 --> 03:53.046
VLC player too. You can add subtitles on top of a

03:53.078 --> 03:56.318
video that you have and that's how you can get

03:56.374 --> 04:00.422
subtitles for your videos. In just how many lines of code?

04:00.566 --> 04:03.686
12345 lines of code. I mean, just count

04:03.718 --> 04:07.774
this as one, you know, just writing it into file.

04:07.902 --> 04:11.254
So that's it. If you have any questions, make sure to leave them down

04:11.302 --> 04:14.494
below in the comment section. If you want

04:14.502 --> 04:17.894
to learn more about this functionality, you can go to the

04:17.942 --> 04:21.598
AssemblyAI documentation or the SDK documentation

04:21.694 --> 04:25.302
on GitHub. I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
