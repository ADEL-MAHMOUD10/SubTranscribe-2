WEBVTT

00:00.200 --> 00:03.374
If you want to quickly add subtitles to your videos and take them from

00:03.422 --> 00:06.462
this based on this research, now AI can learn

00:06.486 --> 00:10.054
to use digital tools like to this in few or

00:10.102 --> 00:13.798
zero shot settings. When it comes to natural language processing tasks,

00:13.934 --> 00:17.470
you can do it with AssemblyAI and it's going to be just a couple of

00:17.510 --> 00:21.006
lines of code very quick. Based on your transcription that you

00:21.038 --> 00:24.814
submitted to AssemblyAI, you're going to get time subtitles

00:24.862 --> 00:28.048
that you can upload to YouTube or use on your

00:28.104 --> 00:31.408
local computer however you like. The first thing that you want to do is

00:31.424 --> 00:34.928
to make sure that you have the AssemblyAI SDK installed.

00:35.024 --> 00:38.296
And for that all you have to do is go to your terminal and write

00:38.328 --> 00:42.264
down pip install AssemblyAI and that will install the python

00:42.312 --> 00:45.760
SDK of AssemblyAI. And then you want to make sure that you have

00:45.800 --> 00:49.464
a AssemblyAI API key and that is free to get. So just

00:49.512 --> 00:53.372
head on to AssemblyAI.com comma create an account and

00:53.396 --> 00:57.404
you will get a free API key from AssemblyAI. And then

00:57.532 --> 01:02.636
in your python file just import AssemblyAI

01:02.748 --> 01:06.620
as AAI and then set your AssemblyAI

01:06.660 --> 01:10.640
key, the API key here.

01:12.140 --> 01:16.160
And then you just want to start a transcription job.

01:17.260 --> 01:19.960
So create a transcriber object.

01:20.920 --> 01:23.620
And on that I can start the transcription job.

01:23.920 --> 01:27.536
You can either pass a video or audio file directly to

01:27.568 --> 01:30.944
AssemblyAI. So the video I'm working with in

01:30.992 --> 01:35.120
this example is this one. Can AI

01:35.160 --> 01:38.888
learn to use tools? Well, maybe not physical one, but this is

01:38.904 --> 01:42.976
a 4k video and it is 1.18gb,

01:43.008 --> 01:46.848
so it's going to take some time to be uploaded to AssemblyAI

01:46.984 --> 01:50.796
instead. You can just, if you're on Mac, you can start

01:50.828 --> 01:54.796
the quicktime player and then say file export

01:54.868 --> 01:58.124
as audio only and it will strip the audio of

01:58.172 --> 02:02.028
your video. And then my audio is only

02:02.204 --> 02:05.160
8.7 megabytes, so it's going to go much faster.

02:05.500 --> 02:09.740
So that's why I'm going to pass the tool former m

02:09.780 --> 02:13.292
four a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.092
So this will export the subtitles in the SRT format if

02:25.116 --> 02:28.956
you want. It can also export them in the VTT format.

02:29.068 --> 02:32.972
So I'll use the SRT format right now. You don't have to pass anything to

02:32.996 --> 02:37.020
it, but if you want to specify how many characters maximum

02:37.060 --> 02:41.394
you want on each caption, you can specify chars

02:41.482 --> 02:44.634
per caption variable. And this is going to be an

02:44.682 --> 02:48.370
integer so we can specify it to be 100 to

02:48.450 --> 02:52.258
50. I think overall is generally between 81

02:52.274 --> 02:56.218
hundred. So 50 would be a bit short and 150 would be

02:56.234 --> 02:59.466
a bit long. But we don't have to specify this, we'll just

02:59.498 --> 03:03.274
use a default value. And then I'm just going to open

03:03.402 --> 03:07.258
a file. I'll just call this subtitles

03:07.394 --> 03:11.210
srta with write permission

03:14.070 --> 03:19.478
and then write my subtitles in there and

03:19.494 --> 03:20.810
then close the file.

03:22.350 --> 03:25.750
All right, let's run this and see how it goes. All right,

03:25.790 --> 03:29.450
now that this is done, let's go and take a look.

03:30.790 --> 03:34.006
I can open it with text editor and

03:34.038 --> 03:37.118
this is what it looks like. And this would be as

03:37.134 --> 03:40.926
you can see, this is timed and it will

03:40.958 --> 03:44.450
be accepted by anywhere that accepts the SRT files.

03:44.910 --> 03:48.838
You can upload it to YouTube for example with your video or as far

03:48.854 --> 03:52.318
as I know, on the VLC player too. You can add subtitles on

03:52.334 --> 03:55.550
top of a video that you have and that's how

03:55.590 --> 03:59.278
you can get subtitles for your videos. In just how

03:59.294 --> 04:02.534
many lines of code? 12345 lines

04:02.542 --> 04:05.730
of code. I mean, just count this as one, you know, just writing it

04:06.230 --> 04:09.990
into file. So that's it. If you have any questions,

04:10.070 --> 04:12.930
make sure to leave them down below in the comment section.

04:14.030 --> 04:17.406
If you want to learn more about this functionality, you can

04:17.438 --> 04:21.598
go to the AssemblyAI documentation or the SDK documentation

04:21.694 --> 04:25.302
on GitHub. I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
