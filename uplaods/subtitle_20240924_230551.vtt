WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:08.158
based on this research, now AI can learn to use digital tools like

00:08.254 --> 00:11.622
to this in few or zero shot settings. When it

00:11.646 --> 00:15.766
comes to natural language processing tasks, you can do it with AssemblyAI

00:15.878 --> 00:19.134
and it's going to be just a couple of lines of code very quick.

00:19.262 --> 00:22.662
Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.964
you're going to get time subtitles that you can upload to YouTube

00:27.102 --> 00:30.416
or use on your local computer however you like. The first

00:30.448 --> 00:33.664
thing that you want to do is to make sure that you have the AssemblyAI

00:33.712 --> 00:37.704
SDK installed. And for that all you have to do is go to your terminal

00:37.832 --> 00:41.120
and write down pip install AssemblyAI and that will

00:41.160 --> 00:44.864
install the python SDK of AssemblyAI. And then you want

00:44.872 --> 00:47.952
to make sure that you have a AssemblyAI API key and

00:47.976 --> 00:51.544
that is free to get. So just head on to AssemblyAI.com

00:51.592 --> 00:55.092
comma create an account and you will get a free API key from

00:55.116 --> 00:59.132
AssemblyAI. And then in your python file

00:59.276 --> 01:02.636
just import AssemblyAI

01:02.748 --> 01:06.620
as AAI and then set your AssemblyAI

01:06.660 --> 01:10.640
key, the API key here.

01:12.140 --> 01:16.160
And then you just want to start a transcription job.

01:17.260 --> 01:19.960
So create a transcriber object.

01:20.920 --> 01:24.424
And on that I can start the transcription job. You can

01:24.472 --> 01:28.616
either pass a video or audio file directly to AssemblyAI.

01:28.728 --> 01:32.760
So the video I'm working with in this example is

01:32.800 --> 01:36.368
this one. Can AI learn to use tools?

01:36.504 --> 01:39.840
Well, maybe not physical one, but this is a 4k video

01:39.920 --> 01:42.976
and it is 1.18gb,

01:43.008 --> 01:46.848
so it's going to take some time to be uploaded to AssemblyAI

01:46.984 --> 01:50.796
instead. You can just, if you're on Mac, you can start

01:50.828 --> 01:54.796
the quicktime player and then say file export

01:54.868 --> 01:59.116
as audio only and it will strip the audio of your video.

01:59.268 --> 02:03.028
And then my audio is only 8.7

02:03.084 --> 02:06.516
megabytes, so it's going to go much faster. So that's why I'm

02:06.548 --> 02:10.124
going to pass the tool former m four

02:10.212 --> 02:13.292
a file to be transcribed.

02:13.436 --> 02:17.160
And once the transcription is ready,

02:17.540 --> 02:21.236
all I have to do is to say export subtitles srt.

02:21.348 --> 02:25.092
So this will export the subtitles in the SRT format if

02:25.116 --> 02:28.956
you want. It can also export them in the VTT format.

02:29.068 --> 02:32.780
So I'll use the SRT format right now. You don't have to pass anything

02:32.820 --> 02:36.364
to it, but if you want to specify how many characters

02:36.452 --> 02:40.120
maximum you want on each caption, you can specify

02:40.650 --> 02:44.002
chars per caption variable. And this is

02:44.026 --> 02:47.442
going to be an integer so we can specify it to be

02:47.466 --> 02:51.562
100 to 50. I think overall is generally between

02:51.626 --> 02:55.162
81 hundred. So 50 would be a bit short and

02:55.186 --> 02:58.802
150 would be a bit long. But we don't have to specify

02:58.866 --> 03:02.706
this, we'll just use a default value. And then I'm just going to

03:02.778 --> 03:06.370
open a file. I'll just call this

03:06.410 --> 03:10.382
subtitles srta with write

03:10.446 --> 03:14.406
permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:27.286
let's run this and see how it goes. All right, now that this is done,

03:27.358 --> 03:31.246
let's go and take a look. I can

03:31.278 --> 03:34.782
open it with text editor and this is what

03:34.806 --> 03:38.370
it looks like. And this would be as you can see, this is

03:39.190 --> 03:42.862
timed and it will be accepted by anywhere that

03:42.886 --> 03:46.774
accepts the SRT files. You can upload it to YouTube for example

03:46.822 --> 03:50.630
with your video or as far as I know, on the VLC player too.

03:50.670 --> 03:54.174
You can add subtitles on top of a video that you have

03:54.302 --> 03:57.846
and that's how you can get subtitles for your videos.

03:57.958 --> 04:00.422
In just how many lines of code?

04:00.566 --> 04:04.046
12345 lines of code. I mean, just count this as

04:04.078 --> 04:07.774
one, you know, just writing it into file.

04:07.902 --> 04:10.958
So that's it. If you have any questions, make sure to leave them

04:11.014 --> 04:14.870
down below in the comment section. If you want to learn

04:14.910 --> 04:19.782
more about this functionality, you can go to the AssemblyAI documentation

04:19.926 --> 04:23.710
or the SDK documentation on GitHub. I will make sure to leave links

04:23.750 --> 04:27.318
for you in the description below. Thanks for watching and I will see you

04:27.334 --> 04:28.330
in the next video.
