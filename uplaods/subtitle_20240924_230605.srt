1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:07,294
based on this research, now AI can learn to use digital

3
00:00:07,382 --> 00:00:11,182
tools like to this in few or zero shot settings.

4
00:00:11,286 --> 00:00:14,542
When it comes to natural language processing tasks, you can do it

5
00:00:14,566 --> 00:00:17,718
with AssemblyAI and it's going to be just a couple of lines

6
00:00:17,734 --> 00:00:21,662
of code very quick. Based on your transcription that you submitted to

7
00:00:21,686 --> 00:00:24,998
AssemblyAI, you're going to get time subtitles that

8
00:00:25,014 --> 00:00:28,816
you can upload to YouTube or use on your local computer

9
00:00:28,848 --> 00:00:31,936
however you like. The first thing that you want to do is to make sure

10
00:00:31,968 --> 00:00:35,664
that you have the AssemblyAI SDK installed. And for that

11
00:00:35,712 --> 00:00:39,496
all you have to do is go to your terminal and write down pip install

12
00:00:39,568 --> 00:00:43,936
AssemblyAI and that will install the python SDK of AssemblyAI.

13
00:00:44,088 --> 00:00:47,632
And then you want to make sure that you have a AssemblyAI API key

14
00:00:47,736 --> 00:00:51,544
and that is free to get. So just head on to AssemblyAI.com

15
00:00:51,592 --> 00:00:56,200
comma create an account and you will get a free API key from AssemblyAI.

16
00:00:56,620 --> 00:01:00,760
And then in your python file just import

17
00:01:01,460 --> 00:01:04,996
AssemblyAI as AAI and then

18
00:01:05,028 --> 00:01:08,588
set your AssemblyAI key, the API

19
00:01:08,644 --> 00:01:10,640
key here.

20
00:01:12,140 --> 00:01:15,540
And then you just want to start a transcription

21
00:01:15,580 --> 00:01:19,960
job. So create a transcriber object.

22
00:01:20,920 --> 00:01:24,728
And on that I can start the transcription job. You can either

23
00:01:24,784 --> 00:01:28,616
pass a video or audio file directly to AssemblyAI.

24
00:01:28,728 --> 00:01:32,760
So the video I'm working with in this example is

25
00:01:32,800 --> 00:01:36,368
this one. Can AI learn to use tools?

26
00:01:36,504 --> 00:01:40,280
Well, maybe not physical one, but this is a 4k video and

27
00:01:40,360 --> 00:01:43,880
it is 1.18gb, so it's

28
00:01:43,920 --> 00:01:47,652
going to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,776 --> 00:01:51,404
You can just, if you're on Mac, you can start the quicktime

30
00:01:51,452 --> 00:01:55,788
player and then say file export as audio

31
00:01:55,844 --> 00:01:59,116
only and it will strip the audio of your video.

32
00:01:59,268 --> 00:02:03,028
And then my audio is only 8.7

33
00:02:03,084 --> 00:02:06,516
megabytes, so it's going to go much faster. So that's why I'm

34
00:02:06,548 --> 00:02:10,124
going to pass the tool former m four

35
00:02:10,212 --> 00:02:13,292
a file to be transcribed.

36
00:02:13,436 --> 00:02:17,160
And once the transcription is ready,

37
00:02:17,540 --> 00:02:21,236
all I have to do is to say export subtitles srt.

38
00:02:21,348 --> 00:02:25,092
So this will export the subtitles in the SRT format if

39
00:02:25,116 --> 00:02:28,956
you want. It can also export them in the VTT format.

40
00:02:29,068 --> 00:02:32,252
So I'll use the SRT format right now. You don't have to

41
00:02:32,276 --> 00:02:35,684
pass anything to it, but if you want to specify how many

42
00:02:35,732 --> 00:02:39,364
characters maximum you want on each caption, you can

43
00:02:39,412 --> 00:02:42,826
specify chars per caption

44
00:02:42,898 --> 00:02:46,562
variable. And this is going to be an integer so we can

45
00:02:46,626 --> 00:02:50,650
specify it to be 100 to 50. I think overall

46
00:02:50,690 --> 00:02:54,010
is generally between 81 hundred. So 50 would be a bit

47
00:02:54,050 --> 00:02:57,110
short and 150 would be a bit long.

48
00:02:57,490 --> 00:03:00,790
But we don't have to specify this, we'll just use a default value.

49
00:03:01,130 --> 00:03:05,258
And then I'm just going to open a file.

50
00:03:05,434 --> 00:03:09,610
I'll just call this subtitles srta with

51
00:03:09,910 --> 00:03:14,406
write permission and

52
00:03:14,438 --> 00:03:19,478
then write my subtitles in there and

53
00:03:19,494 --> 00:03:23,078
then close the file. All right,

54
00:03:23,214 --> 00:03:27,286
let's run this and see how it goes. All right, now that this is done,

55
00:03:27,358 --> 00:03:29,450
let's go and take a look.

56
00:03:30,790 --> 00:03:34,526
I can open it with text editor and this is

57
00:03:34,598 --> 00:03:37,550
what it looks like. And this would be as you can see,

58
00:03:37,590 --> 00:03:40,926
this is timed and it will

59
00:03:40,958 --> 00:03:44,450
be accepted by anywhere that accepts the SRT files.

60
00:03:44,910 --> 00:03:48,718
You can upload it to YouTube for example with your video or as

61
00:03:48,734 --> 00:03:51,974
far as I know, on the VLC player too. You can add subtitles

62
00:03:52,102 --> 00:03:55,262
on top of a video that you have and that's

63
00:03:55,326 --> 00:03:58,886
how you can get subtitles for your videos. In just

64
00:03:59,038 --> 00:04:00,422
how many lines of code?

65
00:04:00,566 --> 00:04:04,198
12345 lines of code. I mean, just count this as one,

66
00:04:04,214 --> 00:04:07,774
you know, just writing it into file.

67
00:04:07,902 --> 00:04:11,254
So that's it. If you have any questions, make sure to leave them down

68
00:04:11,302 --> 00:04:15,134
below in the comment section. If you want to learn more

69
00:04:15,182 --> 00:04:18,814
about this functionality, you can go to the AssemblyAI

70
00:04:18,862 --> 00:04:22,622
documentation or the SDK documentation on GitHub. I will

71
00:04:22,646 --> 00:04:25,950
make sure to leave links for you in the description below. Thanks for

72
00:04:25,990 --> 00:04:28,330
watching and I will see you in the next video.

