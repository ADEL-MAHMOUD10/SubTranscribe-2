1
00:00:00,240 --> 00:00:03,998
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,134 --> 00:00:07,806
based on this research, now AI can learn to use digital tools

3
00:00:07,838 --> 00:00:11,246
like to this and few or zero shot settings

4
00:00:11,358 --> 00:00:15,830
when it comes to natural language processing tasks. You can do it with AssemblyAI

5
00:00:15,950 --> 00:00:19,198
and it's going to be just a couple of lines of code very quick.

6
00:00:19,334 --> 00:00:22,726
Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,838 --> 00:00:27,008
you're going to get time subtitles that you can upload to YouTube

8
00:00:27,134 --> 00:00:30,628
or use on your local computer however you like. The first thing

9
00:00:30,644 --> 00:00:34,252
that you want to do is to make sure that you have the AssemblyAI SDK

10
00:00:34,316 --> 00:00:38,156
installed. And for that all you have to do is go to your terminal and

11
00:00:38,188 --> 00:00:41,548
write down pip install AssemblyAI and that will install

12
00:00:41,604 --> 00:00:45,004
the python SDK of AssemblyAI. And then you want to

13
00:00:45,012 --> 00:00:48,540
make sure that you have a AssemblyAI API key and that is free

14
00:00:48,580 --> 00:00:52,300
to get. So just head on to AssemblyAI.com comma create

15
00:00:52,340 --> 00:00:56,260
an account and you will get a free API key from AssemblyAI.

16
00:00:56,680 --> 00:01:00,780
And then in your python file just import

17
00:01:01,520 --> 00:01:05,056
AssemblyAI as AAI and then

18
00:01:05,088 --> 00:01:09,260
set your AssemblyAI key, the API key

19
00:01:09,960 --> 00:01:13,592
here. And then you just

20
00:01:13,656 --> 00:01:16,220
want to start a transcription job.

21
00:01:17,320 --> 00:01:19,980
So create a transcriber object.

22
00:01:20,990 --> 00:01:23,690
And on that I can start the transcription job.

23
00:01:23,990 --> 00:01:27,382
You can either pass a video or audio file directly

24
00:01:27,406 --> 00:01:30,646
to AssemblyAI. So the video I'm working with

25
00:01:30,718 --> 00:01:33,690
in this example is this one.

26
00:01:34,470 --> 00:01:37,814
Can AI learn to use tools? Well, maybe not physical

27
00:01:37,862 --> 00:01:43,030
one, but this is a 4k video and it is 1.18gb,

28
00:01:43,070 --> 00:01:46,894
so it's going to take some time to be uploaded to AssemblyAI

29
00:01:47,022 --> 00:01:49,960
instead. You can just, if you're on Mac,

30
00:01:50,080 --> 00:01:54,176
you can start the quicktime player and then say file

31
00:01:54,328 --> 00:01:57,904
export as audio only and it will strip the audio

32
00:01:57,952 --> 00:02:01,088
of your video. And then my audio

33
00:02:01,144 --> 00:02:05,220
is only 8.7 megabytes, so it's going to go much faster.

34
00:02:05,560 --> 00:02:08,940
So that's why I'm going to pass the toolformer

35
00:02:09,440 --> 00:02:13,334
M four a file to be transcribed.

36
00:02:13,472 --> 00:02:17,230
And once the transcription is ready,

37
00:02:17,570 --> 00:02:21,306
all I have to do is to say export subtitles srt.

38
00:02:21,418 --> 00:02:24,762
So this will export the subtitles in the SRT format.

39
00:02:24,906 --> 00:02:28,322
If you want it can also export them in the VTT

40
00:02:28,386 --> 00:02:31,514
format. So I'll use the SRT format right now.

41
00:02:31,602 --> 00:02:35,490
You don't have to pass anything to it, but if you want to specify how

42
00:02:35,530 --> 00:02:38,870
many characters maximum you want on each caption,

43
00:02:39,010 --> 00:02:42,886
you can specify chars per caption

44
00:02:42,958 --> 00:02:46,622
variable. And this is going to be an integer so we can

45
00:02:46,686 --> 00:02:50,686
specify it to be 100 to 50. I think overall

46
00:02:50,718 --> 00:02:54,742
is generally between 81 hundred. So 50 would be a bit short

47
00:02:54,926 --> 00:02:58,430
and 150 would be a bit long. But we don't have to

48
00:02:58,470 --> 00:03:02,134
specify this, we'll just use a default value. And then I'm just

49
00:03:02,182 --> 00:03:05,306
going to open a file.

50
00:03:05,478 --> 00:03:09,746
I'll just call this subtitles srt with

51
00:03:09,938 --> 00:03:14,466
write permission and

52
00:03:14,498 --> 00:03:19,538
then write my subtitles in there and

53
00:03:19,554 --> 00:03:23,138
then close the file. All right,

54
00:03:23,274 --> 00:03:26,946
let's run this and see how it goes. All right, now that this is

55
00:03:27,018 --> 00:03:29,470
done, let's go and take a look.

56
00:03:30,880 --> 00:03:34,576
I can open it with text editor and this is

57
00:03:34,648 --> 00:03:38,460
what it looks like. And this would be as you can see, this is

58
00:03:39,240 --> 00:03:42,736
timed and it will be accepted by anywhere

59
00:03:42,768 --> 00:03:46,216
that accepts the SRT files. You can upload it to YouTube

60
00:03:46,248 --> 00:03:49,288
for example, with your video or as far as I know,

61
00:03:49,304 --> 00:03:53,320
on the VLC player too. You can add subtitles on top of a video

62
00:03:53,360 --> 00:03:56,896
that you have and that's how you can get subtitles

63
00:03:56,928 --> 00:04:00,468
for your videos. In just how many lines of code?

64
00:04:00,604 --> 00:04:03,932
12345 lines of code. I mean, just count this

65
00:04:03,956 --> 00:04:07,820
as one, you know, just writing it into file.

66
00:04:07,940 --> 00:04:11,028
So that's it. If you have any questions, make sure to leave them

67
00:04:11,084 --> 00:04:14,564
down below in the comments section. If you want

68
00:04:14,572 --> 00:04:18,860
to learn more about this functionality, you can go to the AssemblyAI

69
00:04:18,900 --> 00:04:22,364
documentation or the SDK documentation on GitHub.

70
00:04:22,412 --> 00:04:26,006
I will make sure to leave links for you in the description below. Thanks for

71
00:04:26,038 --> 00:04:27,870
watching and I will see you in the next video.

