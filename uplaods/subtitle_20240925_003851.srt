1
00:00:00,200 --> 00:00:03,942
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,086 --> 00:00:08,158
based on this research, now AI can learn to use digital tools like

3
00:00:08,254 --> 00:00:11,182
to this in few or zero shot settings.

4
00:00:11,286 --> 00:00:14,542
When it comes to natural language processing tasks, you can do it

5
00:00:14,566 --> 00:00:17,886
with AssemblyAI and it's going to be just a couple of lines of

6
00:00:17,918 --> 00:00:21,006
code very quick. Based on your transcription that you

7
00:00:21,038 --> 00:00:24,814
submitted to AssemblyAI, you're going to get time subtitles

8
00:00:24,862 --> 00:00:28,816
that you can upload to YouTube or use on your local computer

9
00:00:28,848 --> 00:00:31,936
however you like. The first thing that you want to do is to make sure

10
00:00:31,968 --> 00:00:35,400
that you have the AssemblyAI SDK installed. And for

11
00:00:35,440 --> 00:00:39,016
that all you have to do is go to your terminal and write down pip

12
00:00:39,088 --> 00:00:42,680
install AssemblyAI and that will install the python SDK

13
00:00:42,720 --> 00:00:46,000
of AssemblyAI. And then you want to make sure that you have a

14
00:00:46,040 --> 00:00:49,872
AssemblyAI API key and that is free to get. So just head on

15
00:00:49,896 --> 00:00:53,508
to AssemblyAI.com comma create an account and you

16
00:00:53,524 --> 00:00:57,404
will get a free API key from AssemblyAI. And then

17
00:00:57,532 --> 00:01:02,636
in your python file just import AssemblyAI

18
00:01:02,748 --> 00:01:06,620
as AAI and then set your AssemblyAI

19
00:01:06,660 --> 00:01:10,640
key, the API key here.

20
00:01:12,140 --> 00:01:16,160
And then you just want to start a transcription job.

21
00:01:17,260 --> 00:01:19,960
So create a transcriber object.

22
00:01:20,920 --> 00:01:24,424
And on that I can start the transcription job. You can

23
00:01:24,472 --> 00:01:28,616
either pass a video or audio file directly to AssemblyAI.

24
00:01:28,728 --> 00:01:32,216
So the video I'm working with in this example

25
00:01:32,408 --> 00:01:36,368
is this one. Can AI learn to use tools?

26
00:01:36,504 --> 00:01:40,280
Well, maybe not physical one, but this is a 4k video and

27
00:01:40,360 --> 00:01:44,072
it is 1.18gb, so it's going

28
00:01:44,096 --> 00:01:47,652
to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,776 --> 00:01:50,948
You can just, if you're on Mac, you can start the

30
00:01:50,964 --> 00:01:54,796
quicktime player and then say file export

31
00:01:54,868 --> 00:01:58,124
as audio only and it will strip the audio of

32
00:01:58,172 --> 00:02:02,028
your video. And then my audio is only

33
00:02:02,204 --> 00:02:06,100
8.7 megabytes, so it's going to go much faster. So that's

34
00:02:06,140 --> 00:02:09,740
why I'm going to pass the tool former m

35
00:02:09,780 --> 00:02:13,292
four a file to be transcribed.

36
00:02:13,436 --> 00:02:17,160
And once the transcription is ready,

37
00:02:17,540 --> 00:02:21,236
all I have to do is to say export subtitles srt.

38
00:02:21,348 --> 00:02:24,692
So this will export the subtitles in the SRT format

39
00:02:24,836 --> 00:02:28,956
if you want. It can also export them in the VTT format.

40
00:02:29,068 --> 00:02:32,972
So I'll use the SRT format right now. You don't have to pass anything to

41
00:02:32,996 --> 00:02:36,364
it, but if you want to specify how many characters

42
00:02:36,452 --> 00:02:40,120
maximum you want on each caption, you can specify

43
00:02:40,650 --> 00:02:44,002
chars per caption variable. And this is

44
00:02:44,026 --> 00:02:47,178
going to be an integer so we can specify it

45
00:02:47,194 --> 00:02:51,266
to be 100 to 50. I think overall is generally

46
00:02:51,298 --> 00:02:55,162
between 81 hundred. So 50 would be a bit short and

47
00:02:55,186 --> 00:02:58,218
150 would be a bit long. But we don't have

48
00:02:58,234 --> 00:03:01,858
to specify this, we'll just use a default value. And then I'm

49
00:03:01,874 --> 00:03:05,258
just going to open a file.

50
00:03:05,434 --> 00:03:08,786
I'll just call this subtitles srta

51
00:03:08,928 --> 00:03:14,406
with write permission and

52
00:03:14,438 --> 00:03:19,478
then write my subtitles in there and

53
00:03:19,494 --> 00:03:23,078
then close the file. All right,

54
00:03:23,214 --> 00:03:26,518
let's run this and see how it goes. All right, now that this

55
00:03:26,574 --> 00:03:29,450
is done, let's go and take a look.

56
00:03:30,790 --> 00:03:34,526
I can open it with text editor and this is

57
00:03:34,598 --> 00:03:38,370
what it looks like. And this would be as you can see, this is

58
00:03:39,190 --> 00:03:42,686
timed and it will be accepted by anywhere

59
00:03:42,718 --> 00:03:46,166
that accepts the SRT files. You can upload it to YouTube

60
00:03:46,198 --> 00:03:49,982
for example with your video or as far as I know, on the VLC

61
00:03:50,046 --> 00:03:53,270
player too. You can add subtitles on top of a video

62
00:03:53,310 --> 00:03:57,022
that you have and that's how you can get subtitles for

63
00:03:57,046 --> 00:04:00,422
your videos. In just how many lines of code?

64
00:04:00,566 --> 00:04:03,862
12345 lines of code. I mean, just count this

65
00:04:03,886 --> 00:04:07,774
as one, you know, just writing it into file.

66
00:04:07,902 --> 00:04:11,254
So that's it. If you have any questions, make sure to leave them down

67
00:04:11,302 --> 00:04:15,134
below in the comment section. If you want to learn more

68
00:04:15,182 --> 00:04:18,814
about this functionality, you can go to the AssemblyAI

69
00:04:18,862 --> 00:04:22,318
documentation or the SDK documentation on GitHub.

70
00:04:22,374 --> 00:04:25,950
I will make sure to leave links for you in the description below. Thanks for

71
00:04:25,990 --> 00:04:28,330
watching and I will see you in the next video.

