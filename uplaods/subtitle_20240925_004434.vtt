WEBVTT

00:00.200 --> 00:03.942
If you want to quickly add subtitles to your videos and take them from this

00:04.086 --> 00:07.766
based on this research, now AI can learn to use digital tools

00:07.798 --> 00:11.182
like to this in few or zero shot settings.

00:11.286 --> 00:14.750
When it comes to natural language processing tasks, you can do it with

00:14.790 --> 00:18.598
AssemblyAI and it's going to be just a couple of lines of code very

00:18.654 --> 00:22.662
quick. Based on your transcription that you submitted to AssemblyAI,

00:22.766 --> 00:26.054
you're going to get time subtitles that you can upload to

00:26.142 --> 00:29.352
YouTube or use on your local computer however you

00:29.376 --> 00:32.336
like. The first thing that you want to do is to make sure that you

00:32.368 --> 00:36.192
have the AssemblyAI SDK installed. And for that all you have

00:36.216 --> 00:40.504
to do is go to your terminal and write down pip install AssemblyAI

00:40.592 --> 00:43.936
and that will install the python SDK of AssemblyAI.

00:44.088 --> 00:47.952
And then you want to make sure that you have a AssemblyAI API key and

00:47.976 --> 00:51.904
that is free to get. So just head on to AssemblyAI.com comma

00:51.992 --> 00:55.092
create an account and you will get a free API key from

00:55.116 --> 00:59.132
AssemblyAI. And then in your python file

00:59.276 --> 01:02.636
just import AssemblyAI

01:02.748 --> 01:06.620
as AAI and then set your AssemblyAI

01:06.660 --> 01:10.640
key, the API key here.

01:12.140 --> 01:15.540
And then you just want to start a transcription

01:15.580 --> 01:19.244
job. So create a transcriber

01:19.292 --> 01:23.620
object. And on that I can start the transcription job.

01:23.920 --> 01:27.536
You can either pass a video or audio file directly to

01:27.568 --> 01:31.248
AssemblyAI. So the video I'm working with in this

01:31.304 --> 01:33.620
example is this one.

01:34.440 --> 01:38.280
Can AI learn to use tools? Well, maybe not physical one,

01:38.400 --> 01:42.976
but this is a 4k video and it is 1.18gb,

01:43.008 --> 01:46.848
so it's going to take some time to be uploaded to AssemblyAI

01:46.984 --> 01:50.532
instead. You can just, if you're on Mac, you can

01:50.596 --> 01:54.796
start the quicktime player and then say file export

01:54.868 --> 01:59.116
as audio only and it will strip the audio of your video.

01:59.268 --> 02:03.508
And then my audio is only 8.7 megabytes,

02:03.524 --> 02:07.268
so it's going to go much faster. So that's why I'm going to pass

02:07.324 --> 02:11.908
the tool former m four a file

02:12.004 --> 02:15.956
to be transcribed. And once the transcription

02:16.068 --> 02:19.180
is ready, all I have to do is to say

02:19.260 --> 02:23.084
export subtitles srt. So this will export the subtitles

02:23.132 --> 02:26.404
in the SRT format if you want. It can also

02:26.452 --> 02:30.348
export them in the VTT format. So I'll use the SRT

02:30.404 --> 02:34.132
format right now. You don't have to pass anything to it, but if

02:34.156 --> 02:37.780
you want to specify how many characters maximum you want on

02:37.820 --> 02:42.042
each caption, you can specify chars per

02:42.186 --> 02:46.282
caption variable. And this is going to be an integer so we

02:46.306 --> 02:50.058
can specify it to be 100 to 50. I think

02:50.194 --> 02:53.834
overall is generally between 81 hundred. So 50 would be a

02:53.842 --> 02:57.110
bit short and 150 would be a bit long.

02:57.490 --> 03:00.790
But we don't have to specify this, we'll just use a default value.

03:01.130 --> 03:05.258
And then I'm just going to open a file.

03:05.434 --> 03:08.786
I'll just call this subtitles srta

03:08.928 --> 03:14.406
with write permission and

03:14.438 --> 03:19.478
then write my subtitles in there and

03:19.494 --> 03:23.078
then close the file. All right,

03:23.214 --> 03:26.518
let's run this and see how it goes. All right, now that this

03:26.574 --> 03:29.450
is done, let's go and take a look.

03:30.790 --> 03:34.206
I can open it with text editor and this

03:34.238 --> 03:37.550
is what it looks like. And this would be as you can see,

03:37.590 --> 03:41.102
this is timed and it will be

03:41.126 --> 03:44.450
accepted by anywhere that accepts the SRT files.

03:44.910 --> 03:48.718
You can upload it to YouTube for example with your video or as

03:48.734 --> 03:52.318
far as I know, on the VLC player too. You can add subtitles on

03:52.334 --> 03:55.742
top of a video that you have and that's how you

03:55.766 --> 03:59.278
can get subtitles for your videos. In just how

03:59.294 --> 04:02.822
many lines of code? 12345 lines of code.

04:02.846 --> 04:06.902
I mean, just count this as one, you know, just writing it into

04:07.046 --> 04:10.382
file. So that's it. If you have any questions, make sure

04:10.406 --> 04:12.930
to leave them down below in the comment section.

04:14.030 --> 04:17.558
If you want to learn more about this functionality, you can go

04:17.574 --> 04:21.598
to the AssemblyAI documentation or the SDK documentation

04:21.694 --> 04:25.302
on GitHub. I will make sure to leave links for you in the description below.

04:25.446 --> 04:28.330
Thanks for watching and I will see you in the next video.
