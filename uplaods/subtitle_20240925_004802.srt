1
00:00:00,240 --> 00:00:03,998
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,134 --> 00:00:07,374
based on this research, now AI can learn to use digital

3
00:00:07,462 --> 00:00:10,710
tools like to this and few or zero shot

4
00:00:10,750 --> 00:00:14,462
settings when it comes to natural language processing tasks. You can do

5
00:00:14,486 --> 00:00:18,318
it with AssemblyAI and it's going to be just a couple of lines of code

6
00:00:18,374 --> 00:00:22,726
very quick. Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,838 --> 00:00:26,094
you're going to get time subtitles that you can upload to

8
00:00:26,182 --> 00:00:29,908
YouTube or use on your local computer however you like.

9
00:00:30,044 --> 00:00:32,556
The first thing that you want to do is to make sure that you have

10
00:00:32,588 --> 00:00:36,228
the AssemblyAI SDK installed. And for that all you have

11
00:00:36,244 --> 00:00:39,532
to do is go to your terminal and write down pip install

12
00:00:39,596 --> 00:00:42,716
AssemblyAI and that will install the python SDK

13
00:00:42,748 --> 00:00:46,820
of AssemblyAI. And then you want to make sure that you have a AssemblyAI

14
00:00:46,860 --> 00:00:50,284
API key and that is free to get. So just head on to

15
00:00:50,372 --> 00:00:53,408
AssemblyAI.com comma create an account and

16
00:00:53,424 --> 00:00:57,464
you will get a free API key from AssemblyAI. And then

17
00:00:57,592 --> 00:01:02,672
in your python file just import AssemblyAI

18
00:01:02,776 --> 00:01:06,680
as AAI and then set your AssemblyAI

19
00:01:06,720 --> 00:01:10,700
key, the API key here.

20
00:01:12,200 --> 00:01:16,220
And then you just want to start a transcription job.

21
00:01:17,320 --> 00:01:19,980
So create a transcriber object.

22
00:01:20,990 --> 00:01:24,470
And on that I can start the transcription job. You can

23
00:01:24,510 --> 00:01:28,686
either pass a video or audio file directly to AssemblyAI.

24
00:01:28,798 --> 00:01:32,286
So the video I'm working with in this example

25
00:01:32,478 --> 00:01:36,438
is this one. Can AI learn to use tools?

26
00:01:36,574 --> 00:01:40,326
Well, maybe not physical one, but this is a 4k video and

27
00:01:40,398 --> 00:01:43,934
it is 1.18gb, so it's

28
00:01:43,982 --> 00:01:47,700
going to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,830 --> 00:01:52,060
You can just, if you're on Mac, you can start the quicktime player

30
00:01:52,440 --> 00:01:55,832
and then say file export as audio

31
00:01:55,896 --> 00:01:59,152
only and it will strip the audio of your video.

32
00:01:59,296 --> 00:02:03,088
And then my audio is only 8.7

33
00:02:03,144 --> 00:02:06,576
megabytes, so it's going to go much faster. So that's why I'm

34
00:02:06,608 --> 00:02:10,184
going to pass the toolformer M four

35
00:02:10,272 --> 00:02:13,334
a file to be transcribed.

36
00:02:13,472 --> 00:02:17,230
And once the transcription is ready,

37
00:02:17,570 --> 00:02:21,306
all I have to do is to say export subtitles srt.

38
00:02:21,418 --> 00:02:24,762
So this will export the subtitles in the SRT format.

39
00:02:24,906 --> 00:02:28,322
If you want it can also export them in the VTT

40
00:02:28,386 --> 00:02:31,514
format. So I'll use the SRT format right now.

41
00:02:31,602 --> 00:02:35,170
You don't have to pass anything to it, but if you want to specify

42
00:02:35,250 --> 00:02:38,870
how many characters maximum you want on each caption,

43
00:02:39,010 --> 00:02:42,886
you can specify chars per caption

44
00:02:42,958 --> 00:02:46,326
variable. And this is going to be an integer so we

45
00:02:46,358 --> 00:02:50,078
can specify it to be 100 to 50. I think

46
00:02:50,214 --> 00:02:53,622
overall is generally between 81 hundred. So 50 would

47
00:02:53,646 --> 00:02:57,170
be a bit short and 150 would be a bit long.

48
00:02:57,550 --> 00:03:00,850
But we don't have to specify this, we'll just use a default value.

49
00:03:01,190 --> 00:03:05,306
And then I'm just going to open a file.

50
00:03:05,478 --> 00:03:09,746
I'll just call this subtitles srt with

51
00:03:09,938 --> 00:03:14,466
write permission and

52
00:03:14,498 --> 00:03:19,538
then write my subtitles in there and

53
00:03:19,554 --> 00:03:23,138
then close the file. All right,

54
00:03:23,274 --> 00:03:26,946
let's run this and see how it goes. All right, now that this is

55
00:03:27,018 --> 00:03:29,470
done, let's go and take a look.

56
00:03:30,880 --> 00:03:34,256
I can open it with text editor and this

57
00:03:34,288 --> 00:03:37,600
is what it looks like. And this would be as you can see,

58
00:03:37,640 --> 00:03:41,152
this is timed and it will be

59
00:03:41,176 --> 00:03:44,500
accepted by anywhere that accepts the SRT files.

60
00:03:44,960 --> 00:03:48,888
You can upload it to YouTube for example, with your video or as far

61
00:03:48,904 --> 00:03:52,024
as I know, on the VLC player too. You can add subtitles

62
00:03:52,152 --> 00:03:55,792
on top of a video that you have and that's how you

63
00:03:55,816 --> 00:03:59,332
can get subtitles for your videos. In just how

64
00:03:59,356 --> 00:04:02,892
many lines of code? 12345 lines of code.

65
00:04:02,916 --> 00:04:06,948
I mean, just count this as one, you know, just writing it into

66
00:04:07,084 --> 00:04:10,036
file. So that's it. If you have any questions,

67
00:04:10,108 --> 00:04:13,000
make sure to leave them down below in the comments section.

68
00:04:14,100 --> 00:04:17,732
If you want to learn more about this functionality, you can go to

69
00:04:17,756 --> 00:04:21,628
the AssemblyAI documentation or the SDK documentation

70
00:04:21,724 --> 00:04:25,386
on GitHub. I will make sure to leave links for you in the description below.

71
00:04:25,548 --> 00:04:27,870
Thanks for watching and I will see you in the next video.

