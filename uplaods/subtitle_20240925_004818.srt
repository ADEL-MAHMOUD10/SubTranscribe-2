1
00:00:00,240 --> 00:00:03,998
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,134 --> 00:00:07,806
based on this research, now AI can learn to use digital tools

3
00:00:07,838 --> 00:00:11,246
like to this and few or zero shot settings

4
00:00:11,358 --> 00:00:15,830
when it comes to natural language processing tasks. You can do it with AssemblyAI

5
00:00:15,950 --> 00:00:19,198
and it's going to be just a couple of lines of code very quick.

6
00:00:19,334 --> 00:00:22,726
Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,838 --> 00:00:27,008
you're going to get time subtitles that you can upload to YouTube

8
00:00:27,134 --> 00:00:30,628
or use on your local computer however you like. The first thing

9
00:00:30,644 --> 00:00:34,252
that you want to do is to make sure that you have the AssemblyAI SDK

10
00:00:34,316 --> 00:00:37,764
installed. And for that all you have to do is go to your terminal

11
00:00:37,892 --> 00:00:41,548
and write down pip install AssemblyAI and that will install

12
00:00:41,604 --> 00:00:44,828
the python SDK of AssemblyAI. And then you

13
00:00:44,844 --> 00:00:48,172
want to make sure that you have a AssemblyAI API key and that

14
00:00:48,196 --> 00:00:51,964
is free to get. So just head on to AssemblyAI.com comma

15
00:00:52,052 --> 00:00:56,260
create an account and you will get a free API key from AssemblyAI.

16
00:00:56,680 --> 00:01:00,780
And then in your python file just import

17
00:01:01,520 --> 00:01:05,304
AssemblyAI as AAI and then set

18
00:01:05,352 --> 00:01:09,260
your AssemblyAI key, the API key

19
00:01:09,960 --> 00:01:13,856
here. And then you just want

20
00:01:13,888 --> 00:01:16,220
to start a transcription job.

21
00:01:17,320 --> 00:01:19,980
So create a transcriber object.

22
00:01:20,990 --> 00:01:25,166
And on that I can start the transcription job. You can either pass

23
00:01:25,238 --> 00:01:28,686
a video or audio file directly to AssemblyAI.

24
00:01:28,798 --> 00:01:32,806
So the video I'm working with in this example is

25
00:01:32,838 --> 00:01:36,438
this one. Can AI learn to use tools?

26
00:01:36,574 --> 00:01:40,326
Well, maybe not physical one, but this is a 4k video and

27
00:01:40,398 --> 00:01:44,118
it is 1.18gb, so it's going

28
00:01:44,134 --> 00:01:47,700
to take some time to be uploaded to AssemblyAI instead.

29
00:01:47,830 --> 00:01:51,008
You can just, if you're on Mac, you can start the

30
00:01:51,024 --> 00:01:54,856
quicktime player and then say file export

31
00:01:54,928 --> 00:01:58,536
as audio only and it will strip the audio of your

32
00:01:58,608 --> 00:02:03,088
video. And then my audio is only 8.7

33
00:02:03,144 --> 00:02:06,360
megabytes, so it's going to go much faster. So that's why

34
00:02:06,400 --> 00:02:10,184
I'm going to pass the toolformer M four

35
00:02:10,272 --> 00:02:13,334
a file to be transcribed.

36
00:02:13,472 --> 00:02:17,230
And once the transcription is ready,

37
00:02:17,570 --> 00:02:21,306
all I have to do is to say export subtitles srt.

38
00:02:21,418 --> 00:02:24,762
So this will export the subtitles in the SRT format.

39
00:02:24,906 --> 00:02:29,026
If you want it can also export them in the VTT format.

40
00:02:29,138 --> 00:02:32,850
So I'll use the SRT format right now. You don't have to pass anything

41
00:02:32,890 --> 00:02:36,418
to it, but if you want to specify how many characters

42
00:02:36,514 --> 00:02:40,210
maximum you want on each caption, you can specify

43
00:02:40,630 --> 00:02:43,902
chars per caption variable. And this

44
00:02:43,926 --> 00:02:47,526
is going to be an integer so we can specify it to be

45
00:02:47,558 --> 00:02:50,686
100 to 50. I think overall

46
00:02:50,718 --> 00:02:54,742
is generally between 81 hundred. So 50 would be a bit short

47
00:02:54,926 --> 00:02:58,102
and 150 would be a bit long. But we don't

48
00:02:58,126 --> 00:03:01,750
have to specify this, we'll just use a default value. And then

49
00:03:01,790 --> 00:03:05,306
I'm just going to open a file.

50
00:03:05,478 --> 00:03:09,746
I'll just call this subtitles srt with

51
00:03:09,938 --> 00:03:14,466
write permission and

52
00:03:14,498 --> 00:03:19,538
then write my subtitles in there and

53
00:03:19,554 --> 00:03:20,830
then close the file.

54
00:03:22,410 --> 00:03:26,290
All right, let's run this and see how it goes. All right, now that

55
00:03:26,330 --> 00:03:29,470
this is done, let's go and take a look.

56
00:03:30,880 --> 00:03:34,576
I can open it with text editor and this is

57
00:03:34,648 --> 00:03:38,460
what it looks like. And this would be as you can see, this is

58
00:03:39,240 --> 00:03:42,912
timed and it will be accepted by anywhere that

59
00:03:42,936 --> 00:03:46,824
accepts the SRT files. You can upload it to YouTube for example,

60
00:03:46,872 --> 00:03:50,392
with your video or as far as I know, on the VLC player

61
00:03:50,456 --> 00:03:53,720
too. You can add subtitles on top of a video that you

62
00:03:53,760 --> 00:03:57,256
have and that's how you can get subtitles for your

63
00:03:57,288 --> 00:04:00,468
videos. In just how many lines of code?

64
00:04:00,604 --> 00:04:03,932
12345 lines of code. I mean, just count this

65
00:04:03,956 --> 00:04:07,820
as one, you know, just writing it into file.

66
00:04:07,940 --> 00:04:11,300
So that's it. If you have any questions, make sure to leave them down

67
00:04:11,340 --> 00:04:14,924
below in the comments section. If you want to learn

68
00:04:14,972 --> 00:04:18,860
more about this functionality, you can go to the AssemblyAI

69
00:04:18,900 --> 00:04:22,364
documentation or the SDK documentation on GitHub.

70
00:04:22,412 --> 00:04:26,006
I will make sure to leave links for you in the description below. Thanks for

71
00:04:26,038 --> 00:04:27,870
watching and I will see you in the next video.

