1
00:00:00,240 --> 00:00:03,998
If you want to quickly add subtitles to your videos and take them from this

2
00:00:04,134 --> 00:00:07,806
based on this research, now AI can learn to use digital tools

3
00:00:07,838 --> 00:00:11,558
like to this and few or zero shot settings when

4
00:00:11,574 --> 00:00:15,830
it comes to natural language processing tasks. You can do it with AssemblyAI

5
00:00:15,950 --> 00:00:19,198
and it's going to be just a couple of lines of code very quick.

6
00:00:19,334 --> 00:00:22,726
Based on your transcription that you submitted to AssemblyAI,

7
00:00:22,838 --> 00:00:27,008
you're going to get time subtitles that you can upload to YouTube

8
00:00:27,134 --> 00:00:30,628
or use on your local computer however you like. The first thing

9
00:00:30,644 --> 00:00:34,252
that you want to do is to make sure that you have the AssemblyAI SDK

10
00:00:34,316 --> 00:00:37,764
installed. And for that all you have to do is go to your terminal

11
00:00:37,892 --> 00:00:40,972
and write down pip install AssemblyAI and that

12
00:00:40,996 --> 00:00:44,828
will install the python SDK of AssemblyAI. And then you

13
00:00:44,844 --> 00:00:48,332
want to make sure that you have a AssemblyAI API key and that is

14
00:00:48,356 --> 00:00:51,964
free to get. So just head on to AssemblyAI.com comma

15
00:00:52,052 --> 00:00:56,260
create an account and you will get a free API key from AssemblyAI.

16
00:00:56,680 --> 00:01:00,780
And then in your python file just import

17
00:01:01,520 --> 00:01:05,056
AssemblyAI as AAI and then

18
00:01:05,088 --> 00:01:09,260
set your AssemblyAI key, the API key

19
00:01:09,960 --> 00:01:13,296
here. And then you

20
00:01:13,328 --> 00:01:16,220
just want to start a transcription job.

21
00:01:17,320 --> 00:01:19,980
So create a transcriber object.

22
00:01:20,990 --> 00:01:23,690
And on that I can start the transcription job.

23
00:01:23,990 --> 00:01:27,566
You can either pass a video or audio file directly to

24
00:01:27,598 --> 00:01:31,294
AssemblyAI. So the video I'm working with in this

25
00:01:31,342 --> 00:01:35,150
example is this one. Can AI

26
00:01:35,190 --> 00:01:38,310
learn to use tools? Well, maybe not physical one,

27
00:01:38,430 --> 00:01:43,030
but this is a 4k video and it is 1.18gb,

28
00:01:43,070 --> 00:01:46,894
so it's going to take some time to be uploaded to AssemblyAI

29
00:01:47,022 --> 00:01:49,960
instead. You can just, if you're on Mac,

30
00:01:50,080 --> 00:01:54,176
you can start the quicktime player and then say file

31
00:01:54,328 --> 00:01:57,904
export as audio only and it will strip the audio

32
00:01:57,952 --> 00:02:02,088
of your video. And then my audio is only

33
00:02:02,264 --> 00:02:05,220
8.7 megabytes, so it's going to go much faster.

34
00:02:05,560 --> 00:02:09,800
So that's why I'm going to pass the toolformer M

35
00:02:09,840 --> 00:02:13,334
four a file to be transcribed.

36
00:02:13,472 --> 00:02:17,230
And once the transcription is ready,

37
00:02:17,570 --> 00:02:21,306
all I have to do is to say export subtitles srt.

38
00:02:21,418 --> 00:02:25,346
So this will export the subtitles in the SRT format. If you

39
00:02:25,378 --> 00:02:29,026
want it can also export them in the VTT format.

40
00:02:29,138 --> 00:02:32,850
So I'll use the SRT format right now. You don't have to pass anything

41
00:02:32,890 --> 00:02:37,074
to it, but if you want to specify how many characters maximum

42
00:02:37,122 --> 00:02:41,454
you want on each caption, you can specify chars

43
00:02:41,542 --> 00:02:45,478
per caption variable. And this is going to be an integer

44
00:02:45,654 --> 00:02:49,142
so we can specify it to be 100 to 50.

45
00:02:49,326 --> 00:02:53,382
I think overall is generally between 81 hundred. So 50

46
00:02:53,446 --> 00:02:57,170
would be a bit short and 150 would be a bit long.

47
00:02:57,550 --> 00:03:00,850
But we don't have to specify this, we'll just use a default value.

48
00:03:01,190 --> 00:03:05,306
And then I'm just going to open a file.

49
00:03:05,478 --> 00:03:09,746
I'll just call this subtitles srt with

50
00:03:09,938 --> 00:03:14,466
write permission and

51
00:03:14,498 --> 00:03:19,538
then write my subtitles in there and

52
00:03:19,554 --> 00:03:23,138
then close the file. All right,

53
00:03:23,274 --> 00:03:27,346
let's run this and see how it goes. All right, now that this is done,

54
00:03:27,418 --> 00:03:31,312
let's go and take a look. I can

55
00:03:31,336 --> 00:03:35,360
open it with text editor and this is what it looks

56
00:03:35,400 --> 00:03:38,460
like. And this would be as you can see, this is

57
00:03:39,240 --> 00:03:42,736
timed and it will be accepted by anywhere

58
00:03:42,768 --> 00:03:46,216
that accepts the SRT files. You can upload it to YouTube

59
00:03:46,248 --> 00:03:50,032
for example, with your video or as far as I know, on the VLC

60
00:03:50,096 --> 00:03:53,720
player too. You can add subtitles on top of a video that you

61
00:03:53,760 --> 00:03:57,932
have and that's how you can get subtitles for your videos.

62
00:03:58,056 --> 00:04:00,468
In just how many lines of code?

63
00:04:00,604 --> 00:04:03,740
12345 lines of code. I mean, just count

64
00:04:03,780 --> 00:04:07,820
this as one, you know, just writing it into file.

65
00:04:07,940 --> 00:04:11,028
So that's it. If you have any questions, make sure to leave them

66
00:04:11,084 --> 00:04:14,468
down below in the comments section. If you

67
00:04:14,484 --> 00:04:18,860
want to learn more about this functionality, you can go to the AssemblyAI

68
00:04:18,900 --> 00:04:22,364
documentation or the SDK documentation on GitHub.

69
00:04:22,412 --> 00:04:26,006
I will make sure to leave links for you in the description below. Thanks for

70
00:04:26,038 --> 00:04:27,870
watching and I will see you in the next video.

